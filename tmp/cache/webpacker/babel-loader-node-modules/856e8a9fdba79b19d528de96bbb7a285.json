{"ast":null,"code":"var _jsxFileName = \"/Users/martsofi/test/app/javascript/components/effects/JcReverb.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PlaySwitch from '../PlaySwitch';\nimport ToggleSwitch from '../ToggleSwitch';\nimport Slider from '../Slider';\nimport Knob from '../Knob';\n\nvar jcReverb =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(jcReverb, _React$Component);\n\n  function jcReverb(props) {\n    _classCallCheck(this, jcReverb);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(jcReverb).call(this, props));\n  }\n\n  _createClass(jcReverb, [{\n    key: \"render\",\n    value: function render() {\n      var name = 'jcReverb';\n      var _this$props = this.props,\n          effect = _this$props.effect,\n          wet = _this$props.wet,\n          on = _this$props.on,\n          changeEffectWetValue = _this$props.changeEffectWetValue,\n          changeJcReverbValue = _this$props.changeJcReverbValue,\n          togglEffect = _this$props.togglEffect;\n      return React.createElement(\"div\", {\n        className: \"Effect blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"JcReverb\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Wet\"), React.createElement(Slider, {\n        name: name,\n        min: \"0\",\n        max: \"1\",\n        value: wet,\n        handleValueChange: changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"roomSize\"), React.createElement(Slider, {\n        name: name,\n        min: \"0\",\n        max: \"8\",\n        value: effect.roomSize,\n        handleValueChange: changeJcReverbValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Play\",\n        current: on,\n        handleClick: togglEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return jcReverb;\n}(React.Component);\n\nexport { jcReverb as default };","map":{"version":3,"sources":["/Users/martsofi/test/app/javascript/components/effects/JcReverb.jsx"],"names":["React","PlaySwitch","ToggleSwitch","Slider","Knob","jcReverb","props","name","effect","wet","on","changeEffectWetValue","changeJcReverbValue","togglEffect","roomSize","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;IAEqBC,Q;;;;;AACnB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iFACXA,KADW;AAElB;;;;6BAEQ;AACP,UAAIC,IAAI,GAAG,UAAX;AADO,wBASH,KAAKD,KATF;AAAA,UAGLE,MAHK,eAGLA,MAHK;AAAA,UAILC,GAJK,eAILA,GAJK;AAAA,UAKLC,EALK,eAKLA,EALK;AAAA,UAMLC,oBANK,eAMLA,oBANK;AAAA,UAOLC,mBAPK,eAOLA,mBAPK;AAAA,UAQLC,WARK,eAQLA,WARK;AAWP,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAKE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEN,IADR;AAEE,QAAA,GAAG,EAAC,GAFN;AAGE,QAAA,GAAG,EAAC,GAHN;AAIE,QAAA,KAAK,EAAEE,GAJT;AAKE,QAAA,iBAAiB,EAAEE,oBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,EAaE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEJ,IADR;AAEE,QAAA,GAAG,EAAC,GAFN;AAGE,QAAA,GAAG,EAAC,GAHN;AAIE,QAAA,KAAK,EAAEC,MAAM,CAACM,QAJhB;AAKE,QAAA,iBAAiB,EAAEF,mBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAoBE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAC,MAApB;AAA2B,QAAA,OAAO,EAAEF,EAApC;AAAwC,QAAA,WAAW,EAAEG,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,CADF;AAwBD;;;;EAxCmCb,KAAK,CAACe,S;;SAAvBV,Q","sourcesContent":["import React from 'react'\n\nimport PlaySwitch from '../PlaySwitch'\nimport ToggleSwitch from '../ToggleSwitch'\nimport Slider from '../Slider'\nimport Knob from '../Knob'\n\nexport default class jcReverb extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    let name = 'jcReverb'\n    const {\n      effect,\n      wet,\n      on,\n      changeEffectWetValue,\n      changeJcReverbValue,\n      togglEffect\n    } = this.props\n\n    return (\n      <div className=\"Effect blue\">\n        <div className=\"Title\">\n          <h1>JcReverb</h1>\n        </div>\n        <p>Wet</p>\n        <Slider\n          name={name}\n          min=\"0\"\n          max=\"1\"\n          value={wet}\n          handleValueChange={changeEffectWetValue}\n        />\n        <p>roomSize</p>\n        <Slider\n          name={name}\n          min=\"0\"\n          max=\"8\"\n          value={effect.roomSize}\n          handleValueChange={changeJcReverbValue}\n        />\n        <ToggleSwitch value=\"Play\" current={on} handleClick={togglEffect} />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}