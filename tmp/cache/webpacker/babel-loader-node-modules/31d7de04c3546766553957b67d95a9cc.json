{"ast":null,"code":"var _jsxFileName = \"/Users/martsofi/hseadc2017_thereminvox/app/javascript/containers/Synth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport Tone from 'tone';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'sine',\n      depth: 1\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var distortion = new Tone.Distortion({\n      // distortion: 0.4,\n      // oversample: 'none'\n      distortion: 100,\n      oversample: '4x'\n    }); // let effect = new Tone.Effect({\n    //   wet: 1\n    // }).toMaster()\n\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    }); // MidSideEffect ???\n\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    }); // StereoEffect ???\n    // StereoFeedbackEffect ???\n\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    }); // StereoXFeedbackEffect ???\n\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0.5,\n      spread: 180\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    });\n    autoFilter.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    distortion.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    tremolo.wet.value = 0;\n    vibrato.wet.value = 0;\n    var synth = new Tone.Synth();\n    synth.chain(autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master);\n    _this.state = {\n      autoFilter: autoFilter,\n      autoPanner: autoPanner,\n      autoWah: autoWah,\n      bitCrusher: bitCrusher,\n      chebyshev: chebyshev,\n      chorus: chorus,\n      convolver: convolver,\n      distortion: distortion,\n      feedbackDelay: feedbackDelay,\n      feedbackEffect: feedbackEffect,\n      freeverb: freeverb,\n      jcReverb: jcReverb,\n      phaser: phaser,\n      pingPongDelay: pingPongDelay,\n      pitchShift: pitchShift,\n      reverb: reverb,\n      stereoWidener: stereoWidener,\n      tremolo: tremolo,\n      vibrato: vibrato,\n      synth: synth\n    };\n    _this.startSynth = _this.startSynth.bind(_assertThisInitialized(_this));\n    _this.toggleFilter = _this.toggleFilter.bind(_assertThisInitialized(_this));\n    _this.toggleFeedbackDelay = _this.toggleFeedbackDelay.bind(_assertThisInitialized(_this));\n    _this.toggleTremolo = _this.toggleTremolo.bind(_assertThisInitialized(_this));\n    _this.toggleDistortion = _this.toggleDistortion.bind(_assertThisInitialized(_this));\n    _this.toggleDistortion100 = _this.toggleDistortion100.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"startSynth\",\n    value: function startSynth() {\n      var synth = this.state.synth; // let synth = new Tone.Synth() //.toMaster()\n      // synth.chain(this.state.distortion, Tone.Master)\n      //\n      // this.setState({\n      //   synth: synth\n      // })\n\n      var loop = new Tone.Loop(function (time) {\n        synth.triggerAttackRelease('C2', '8n', time);\n      }, '4n');\n      loop.start('0m').stop('16m');\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleFilter\",\n    value: function toggleFilter() {\n      var autoFilter = new Tone.AutoFilter({\n        frequency: 1,\n        type: 'sine',\n        depth: 1,\n        baseFrequency: 500,\n        octaves: 2.6,\n        filter: {\n          type: 'lowpass',\n          rolloff: -12,\n          Q: 1\n        }\n      }).toMaster();\n      this.setState({\n        autoFilter: autoFilter\n      });\n      var synth = this.state.synth;\n      synth.connect(autoFilter);\n    }\n  }, {\n    key: \"toggleFeedbackDelay\",\n    value: function toggleFeedbackDelay() {\n      var feedbackDelay1 = new Tone.FeedbackDelay({\n        delayTime: '32n',\n        maxDelay: 10\n      }).toMaster();\n      var feedbackDelay2 = new Tone.FeedbackDelay({\n        delayTime: '8n',\n        maxDelay: 10\n      }).toMaster(); // this.setState({\n      //   feedbackDelay: feedbackDelay\n      // })\n      // let { synth } = this.state\n\n      this.state.synth.connect(feedbackDelay1);\n      this.state.synth.connect(feedbackDelay2);\n    }\n  }, {\n    key: \"toggleTremolo\",\n    value: function toggleTremolo() {\n      var tremolo = new Tone.Tremolo({\n        frequency: 10,\n        type: 'sine',\n        depth: 0.5,\n        spread: 180\n      }).toMaster();\n      this.state.synth.connect(tremolo);\n    }\n  }, {\n    key: \"toggleDistortion\",\n    value: function toggleDistortion() {\n      if (this.state.distortionIsOn == true) {\n        // this.state.synth.disconnect()\n        // this.state.synth.chain(Tone.Master)\n        this.state.distortion.wet.value = 0;\n      } else {\n        this.state.synth.chain(this.state.distortion, Tone.Master);\n        this.state.distortion.wet.value = 1;\n      }\n\n      this.setState({\n        distortionIsOn: !this.state.distortionIsOn\n      });\n    }\n  }, {\n    key: \"toggleDistortion100\",\n    value: function toggleDistortion100() {\n      var distortion = this.state.distortion;\n      distortion.distortion = 100;\n      this.setState({\n        distortion: distortion\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.startSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"div\", {\n        onClick: this.toggleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"Toggle Filter\"), React.createElement(\"div\", {\n        onClick: this.toggleFeedbackDelay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Feedback Delay\"), React.createElement(\"div\", {\n        onClick: this.toggleTremolo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Toggle Tremolo\"), React.createElement(\"div\", {\n        onClick: this.toggleDistortion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"Toggle Distrortion \", this.state.distortionIsOn), React.createElement(\"div\", {\n        onClick: this.toggleDistortion100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Toggle Distrortion 100\"));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/martsofi/hseadc2017_thereminvox/app/javascript/containers/Synth.jsx"],"names":["React","Tone","Synth","props","autoFilter","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","oversample","chorus","Chorus","delayTime","spread","convolver","Convolver","onload","noOp","normalize","distortion","Distortion","feedbackDelay","FeedbackDelay","maxDelay","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","tremolo","Tremolo","vibrato","Vibrato","wet","value","synth","chain","Master","state","startSynth","bind","toggleFilter","toggleFeedbackDelay","toggleTremolo","toggleDistortion","toggleDistortion100","loop","Loop","time","triggerAttackRelease","start","stop","Transport","bpm","toMaster","setState","connect","feedbackDelay1","feedbackDelay2","distortionIsOn","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Tone from 'tone'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'sine',\n      depth: 1\n    })\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    })\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    })\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    })\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    })\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    })\n\n    let distortion = new Tone.Distortion({\n      // distortion: 0.4,\n      // oversample: 'none'\n      distortion: 100,\n      oversample: '4x'\n    })\n\n    // let effect = new Tone.Effect({\n    //   wet: 1\n    // }).toMaster()\n\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    })\n\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    })\n\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    })\n\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    })\n\n    // MidSideEffect ???\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    })\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    })\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    })\n\n    let reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    })\n\n    // StereoEffect ???\n    // StereoFeedbackEffect ???\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    })\n\n    // StereoXFeedbackEffect ???\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0.5,\n      spread: 180\n    })\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    })\n\n    autoFilter.wet.value = 0\n    autoPanner.wet.value = 0\n    autoWah.wet.value = 0\n    bitCrusher.wet.value = 0\n    chebyshev.wet.value = 0\n    chorus.wet.value = 0\n    convolver.wet.value = 0\n    distortion.wet.value = 0\n    feedbackDelay.wet.value = 0\n    feedbackEffect.wet.value = 0\n    freeverb.wet.value = 0\n    jcReverb.wet.value = 0\n    phaser.wet.value = 0\n    pingPongDelay.wet.value = 0\n    pitchShift.wet.value = 0\n    reverb.wet.value = 0\n    stereoWidener.wet.value = 0\n    tremolo.wet.value = 0\n    vibrato.wet.value = 0\n\n    let synth = new Tone.Synth()\n\n    synth.chain(\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    this.state = {\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      synth\n    }\n\n    this.startSynth = this.startSynth.bind(this)\n    this.toggleFilter = this.toggleFilter.bind(this)\n    this.toggleFeedbackDelay = this.toggleFeedbackDelay.bind(this)\n    this.toggleTremolo = this.toggleTremolo.bind(this)\n    this.toggleDistortion = this.toggleDistortion.bind(this)\n    this.toggleDistortion100 = this.toggleDistortion100.bind(this)\n  }\n\n  startSynth() {\n    let { synth } = this.state\n\n    // let synth = new Tone.Synth() //.toMaster()\n    // synth.chain(this.state.distortion, Tone.Master)\n    //\n    // this.setState({\n    //   synth: synth\n    // })\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('C2', '8n', time)\n    }, '4n')\n\n    loop.start('0m').stop('16m')\n\n    Tone.Transport.bpm.value = 115\n    Tone.Transport.start()\n  }\n\n  toggleFilter() {\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 500,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    }).toMaster()\n\n    this.setState({\n      autoFilter: autoFilter\n    })\n\n    let { synth } = this.state\n    synth.connect(autoFilter)\n  }\n\n  toggleFeedbackDelay() {\n    let feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: '32n',\n      maxDelay: 10\n    }).toMaster()\n\n    let feedbackDelay2 = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 10\n    }).toMaster()\n\n    // this.setState({\n    //   feedbackDelay: feedbackDelay\n    // })\n\n    // let { synth } = this.state\n    this.state.synth.connect(feedbackDelay1)\n    this.state.synth.connect(feedbackDelay2)\n  }\n\n  toggleTremolo() {\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0.5,\n      spread: 180\n    }).toMaster()\n\n    this.state.synth.connect(tremolo)\n  }\n\n  toggleDistortion() {\n    if (this.state.distortionIsOn == true) {\n      // this.state.synth.disconnect()\n      // this.state.synth.chain(Tone.Master)\n\n      this.state.distortion.wet.value = 0\n    } else {\n      this.state.synth.chain(this.state.distortion, Tone.Master)\n      this.state.distortion.wet.value = 1\n    }\n\n    this.setState({\n      distortionIsOn: !this.state.distortionIsOn\n    })\n  }\n\n  toggleDistortion100() {\n    let { distortion } = this.state\n    distortion.distortion = 100\n\n    this.setState({\n      distortion: distortion\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div onClick={this.startSynth}>Start</div>\n        <div onClick={this.toggleFilter}>Toggle Filter</div>\n        <div onClick={this.toggleFeedbackDelay}>Feedback Delay</div>\n        <div onClick={this.toggleTremolo}>Toggle Tremolo</div>\n        <div onClick={this.toggleDistortion}>\n          Toggle Distrortion {this.state.distortionIsOn}\n        </div>\n        <div onClick={this.toggleDistortion100}>Toggle Distrortion 100</div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}