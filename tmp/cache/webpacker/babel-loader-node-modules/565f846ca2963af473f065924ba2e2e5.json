{"ast":null,"code":"var _jsxFileName = \"/Users/martsofi/hseadc2017_thereminvox/app/javascript/containers/Synth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport PlaySwitch from '../components/PlaySwitch';\nimport ToggleSwitch from '../components/ToggleSwitch';\nimport Slider from '../components/Slider';\nimport Knob from '../components/Knob';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'sine',\n      depth: 1\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var distortion = new Tone.Distortion({\n      // distortion: 0.4,\n      // oversample: 'none'\n      distortion: 0,\n      oversample: '4x'\n    }); // let effect = new Tone.Effect({\n    //   wet: 1\n    // }).toMaster()\n\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    }); // MidSideEffect ???\n\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    }); // StereoEffect ???\n    // StereoFeedbackEffect ???\n\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    }); // StereoXFeedbackEffect ???\n\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0,\n      spread: 360\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    });\n    autoFilter.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    distortion.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    tremolo.wet.value = 0;\n    vibrato.wet.value = 0;\n    var synth = new Tone.Synth();\n    synth.chain(autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master);\n    var loop = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('C2', '8n', time);\n    }, '4n');\n    _this.state = {\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        convolver: convolver\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        pingPongDelay: pingPongDelay\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop: loop\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'toggleSynth', 'toggleDistortion', 'changeDistortionWetValue', 'changeDistortionValue', 'toggleTremolo', 'changeTremoloWetValue', 'changeTremoloValue');\n\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"toggleSynth\",\n    value: function toggleSynth() {\n      var _this$state = this.state,\n          synth = _this$state.synth,\n          loop = _this$state.loop;\n      var instrument = synth.instrument,\n          on = synth.on; // let synth = new Tone.Synth() //.toMaster()\n      // synth.chain(this.state.distortion, Tone.Master)\n      //\n      // this.setState({\n      //   synth: synth\n      // })\n\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState({\n        synth: {\n          instrument: instrument,\n          on: !on\n        }\n      });\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleDistortion\",\n    value: function toggleDistortion() {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleTremolo\",\n    value: function toggleTremolo() {\n      var _this$state$tremolo = this.state.tremolo,\n          effect = _this$state$tremolo.effect,\n          wet = _this$state$tremolo.wet,\n          on = _this$state$tremolo.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState({\n        tremolo: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeDistortionWetValue\",\n    value: function changeDistortionWetValue(value) {\n      var _this$state$distortio2 = this.state.distortion,\n          effect = _this$state$distortio2.effect,\n          wet = _this$state$distortio2.wet,\n          on = _this$state$distortio2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeTremoloWetValue\",\n    value: function changeTremoloWetValue(value) {\n      var _this$state$tremolo2 = this.state.tremolo,\n          effect = _this$state$tremolo2.effect,\n          wet = _this$state$tremolo2.wet,\n          on = _this$state$tremolo2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        tremolo: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(value) {\n      var _this$state$distortio3 = this.state.distortion,\n          effect = _this$state$distortio3.effect,\n          wet = _this$state$distortio3.wet,\n          on = _this$state$distortio3.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeTremoloValue\",\n    value: function changeTremoloValue(value) {\n      var _this$state$tremolo3 = this.state.tremolo,\n          effect = _this$state$tremolo3.effect,\n          wet = _this$state$tremolo3.wet,\n          on = _this$state$tremolo3.on;\n      effect.depth = value; // console.log('depth', depth)\n\n      this.setState({\n        depth: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          tremolo = _this$state2.tremolo,\n          synth = _this$state2.synth;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"Toggle synth\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: synth.on,\n        handleToggleClick: this.toggleSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }), \"Change distortion wet value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"1\",\n        value: distortion.effect.wet.value,\n        handleValueChange: this.changeDistortionWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }), \"Change distortion value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"100\",\n        value: distortion.effect.distortion,\n        handleValueChange: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }), \"\\u041D\\u0430\\u0439\\u0442\\u0438 \\u0434\\u043B\\u044F \\u0447\\u0435\\u0433\\u043E \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C \\u043A\\u043D\\u043E\\u0431\", React.createElement(Knob, {\n        min: \"\",\n        max: \"\",\n        handleValueChange: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }), \"toggle Distortion\", React.createElement(ToggleSwitch, {\n        value: \"Distortion\",\n        current: distortion.on,\n        handleClick: this.toggleDistortion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Tremolo\",\n        current: tremolo.on,\n        handleClick: this.toggleTremolo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }), \"Change tremolo wet value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"1\",\n        value: tremolo.effect.wet.value,\n        handleValueChange: this.changeTremoloWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }), \"Change tremolo value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"1\",\n        value: tremolo.effect.depth,\n        handleValueChange: this.changeTremoloValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/martsofi/hseadc2017_thereminvox/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","ToggleSwitch","Slider","Knob","Synth","props","autoFilter","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","oversample","chorus","Chorus","delayTime","spread","convolver","Convolver","onload","noOp","normalize","distortion","Distortion","feedbackDelay","FeedbackDelay","maxDelay","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","tremolo","Tremolo","vibrato","Vibrato","wet","value","synth","chain","Master","loop","Loop","time","triggerAttackRelease","state","effect","on","instrument","bindAll","stop","start","setState","Transport","bpm","toggleSynth","changeDistortionWetValue","changeDistortionValue","toggleDistortion","toggleTremolo","changeTremoloWetValue","changeTremoloValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport PlaySwitch from '../components/PlaySwitch'\nimport ToggleSwitch from '../components/ToggleSwitch'\nimport Slider from '../components/Slider'\nimport Knob from '../components/Knob'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: 'sine',\n      depth: 1\n    })\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    })\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    })\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    })\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    })\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    })\n\n    let distortion = new Tone.Distortion({\n      // distortion: 0.4,\n      // oversample: 'none'\n      distortion: 0,\n      oversample: '4x'\n    })\n\n    // let effect = new Tone.Effect({\n    //   wet: 1\n    // }).toMaster()\n\n    let feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    })\n\n    let feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    })\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    })\n\n    let jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    })\n\n    // MidSideEffect ???\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    })\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    })\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    })\n\n    let reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    })\n\n    // StereoEffect ???\n    // StereoFeedbackEffect ???\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    })\n\n    // StereoXFeedbackEffect ???\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0,\n      spread: 360\n    })\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    })\n\n    autoFilter.wet.value = 0\n    autoPanner.wet.value = 0\n    autoWah.wet.value = 0\n    bitCrusher.wet.value = 0\n    chebyshev.wet.value = 0\n    chorus.wet.value = 0\n    convolver.wet.value = 0\n    distortion.wet.value = 0\n    feedbackDelay.wet.value = 0\n    feedbackEffect.wet.value = 0\n    freeverb.wet.value = 0\n    jcReverb.wet.value = 0\n    phaser.wet.value = 0\n    pingPongDelay.wet.value = 0\n    pitchShift.wet.value = 0\n    reverb.wet.value = 0\n    stereoWidener.wet.value = 0\n    tremolo.wet.value = 0\n    vibrato.wet.value = 0\n\n    let synth = new Tone.Synth()\n\n    synth.chain(\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('C2', '8n', time)\n    }, '4n')\n\n    this.state = {\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: { convolver },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: { pingPongDelay },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop\n    }\n\n    _.bindAll(\n      this,\n      'toggleSynth',\n      'toggleDistortion',\n      'changeDistortionWetValue',\n      'changeDistortionValue',\n      'toggleTremolo',\n      'changeTremoloWetValue',\n      'changeTremoloValue'\n    )\n  }\n\n  toggleSynth() {\n    let { synth, loop } = this.state\n    let { instrument, on } = synth\n\n    // let synth = new Tone.Synth() //.toMaster()\n    // synth.chain(this.state.distortion, Tone.Master)\n    //\n    // this.setState({\n    //   synth: synth\n    // })\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      synth: {\n        instrument: instrument,\n        on: !on\n      }\n    })\n\n    Tone.Transport.bpm.value = 115\n    Tone.Transport.start()\n  }\n\n  toggleDistortion() {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  toggleTremolo() {\n    let { effect, wet, on } = this.state.tremolo\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      tremolo: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionWetValue(value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.wet.value = on == true ? value : 0\n\n    wet = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeTremoloWetValue(value) {\n    let { effect, wet, on } = this.state.tremolo\n\n    effect.wet.value = on == true ? value : 0\n\n    wet = value\n\n    this.setState({\n      tremolo: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionValue(value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeTremoloValue(value) {\n    let { effect, wet, on } = this.state.tremolo\n\n    effect.depth = value\n    // console.log('depth', depth)\n\n    this.setState({\n      depth: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let { distortion, tremolo, synth } = this.state\n\n    return (\n      <div>\n        Toggle synth\n        <PlaySwitch\n          name=\"play\"\n          value={synth.on}\n          handleToggleClick={this.toggleSynth}\n        />\n        Change distortion wet value\n        <Slider\n          min=\"0\"\n          max=\"1\"\n          value={distortion.effect.wet.value}\n          handleValueChange={this.changeDistortionWetValue}\n        />\n        Change distortion value\n        <Slider\n          min=\"0\"\n          max=\"100\"\n          value={distortion.effect.distortion}\n          handleValueChange={this.changeDistortionValue}\n        />\n        Найти для чего использовать кноб\n        <Knob min=\"\" max=\"\" handleValueChange={this.changeDistortionValue} />\n        toggle Distortion\n        <ToggleSwitch\n          value=\"Distortion\"\n          current={distortion.on}\n          handleClick={this.toggleDistortion}\n        />\n        <ToggleSwitch\n          value=\"Tremolo\"\n          current={tremolo.on}\n          handleClick={this.toggleTremolo}\n        />\n        Change tremolo wet value\n        <Slider\n          min=\"0\"\n          max=\"1\"\n          value={tremolo.effect.wet.value}\n          handleValueChange={this.changeTremoloWetValue}\n        />\n        Change tremolo value\n        <Slider\n          min=\"0\"\n          max=\"1\"\n          value={tremolo.effect.depth}\n          handleValueChange={this.changeTremoloValue}\n        />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}