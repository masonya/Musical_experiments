{"ast":null,"code":"var _jsxFileName = \"/Users/martsofi/hseadc2017_thereminvox/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport PlaySwitch from '../components/PlaySwitch';\nimport Distortion from '../components/effects/Distortion';\nimport FeedbackDelay from '../components/effects/FeedbackDelay';\nimport BitCrusher from '../components/effects/BitCrusher';\nimport Reverb from '../components/effects/Reverb';\nimport Tremolo from '../components/effects/Tremolo';\nimport Freeverb from '../components/effects/Freeverb';\nimport JcReverb from '../components/effects/JcReverb';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 15,\n      type: 'sine',\n      depth: 1\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 0\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var distortion = new Tone.Distortion({\n      // distortion: 0.4,\n      // oversample: 'none'\n      distortion: 0,\n      oversample: '4x'\n    }); // let effect = new Tone.Effect({\n    //   wet: 1\n    // }).toMaster()\n\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    }); // MidSideEffect ???\n\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 0,\n      preDelay: 0\n    }); // StereoEffect ???\n    // StereoFeedbackEffect ???\n\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    }); // StereoXFeedbackEffect ???\n\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0,\n      spread: 360\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    });\n    autoFilter.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    distortion.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    tremolo.wet.value = 0;\n    vibrato.wet.value = 0;\n    var synth = new Tone.PolySynth();\n    var synth1 = new Tone.Synth();\n    var synth2 = new Tone.Synth();\n    var synth3 = new Tone.Synth();\n    var synth4 = new Tone.Synth();\n    synth.chain(autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master);\n    var pattern = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease('C2', 'D4', 'E5', 'A6');\n    }, '4n');\n    var loop1 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('C2', 'D4', 'E2', '8n', time);\n    }, '4n');\n    var loop2 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('E2', '32n', time);\n    }, '32n');\n    var loop3 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('D2', '1n', time);\n    }, '1n');\n    var loop4 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('A2', '16n', time);\n    }, '16n');\n    _this.state = {\n      lastChange: Date.now(),\n      timeout: 0,\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        convolver: convolver\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        pingPongDelay: pingPongDelay\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      pattern: {\n        pattern: pattern,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'generateRandom', 'getRandomArbitrary', 'toggleLoop', 'changeEffectWetValue', 'changeDistortionValue', 'togglEffect', 'changeFeedbackDelayValue', 'changeBitCrusherValue', 'changeReverbValue', 'changeTremoloFrequencyValue', 'changeTremoloDepthValue', 'changeFreeverbRoomSizeValue', 'changeJcReverbValue', 'changeReverbPreDelayValue');\n\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateRandom();\n    }\n  }, {\n    key: \"getRandomArbitrary\",\n    value: function getRandomArbitrary(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n  }, {\n    key: \"generateRandom\",\n    value: function generateRandom() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          lastChange = _this$state.lastChange,\n          timeout = _this$state.timeout;\n\n      if (Date.now() - lastChange >= timeout) {\n        var random = this.getRandomArbitrary(100, 3000);\n        this.setState({\n          lastChange: Date.now(),\n          timeout: random\n        });\n        this.changeDistortionValue('distortion', random / 30);\n      }\n\n      setTimeout(function () {\n        return _this2.generateRandom();\n      }, timeout);\n    }\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"togglePattern\",\n    value: function togglePattern(loopPattern) {\n      var _this$state$loopPatte = this.state[loopPattern],\n          pattern = _this$state$loopPatte.pattern,\n          on = _this$state$loopPatte.on;\n      on == true ? pattern.stop() : pattern.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopPattern), {\n        pattern: pattern,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"togglEffect\",\n    value: function togglEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayValue\",\n    value: function changeFeedbackDelayValue(effectName, value) {\n      var _this$state$feedbackD = this.state.feedbackDelay,\n          effect = _this$state$feedbackD.effect,\n          wet = _this$state$feedbackD.wet,\n          on = _this$state$feedbackD.on;\n      effect.maxDelay = value;\n      this.setState({\n        feedbackDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeBitCrusherValue\",\n    value: function changeBitCrusherValue(effectName, value) {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          wet = _this$state$bitCrushe.wet,\n          on = _this$state$bitCrushe.on;\n      effect.bits = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeJcReverbValue\",\n    value: function changeJcReverbValue(effectName, value) {\n      var _this$state$jcReverb = this.state.jcReverb,\n          effect = _this$state$jcReverb.effect,\n          wet = _this$state$jcReverb.wet,\n          on = _this$state$jcReverb.on;\n      effect.roomSize = value;\n      this.setState({\n        jcReverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeReverbValue\",\n    value: function changeReverbValue(effectName, value) {\n      var _this$state$reverb = this.state.reverb,\n          effect = _this$state$reverb.effect,\n          wet = _this$state$reverb.wet,\n          on = _this$state$reverb.on;\n      effect.decay = value;\n      this.setState({\n        reverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeReverbPreDelayValue\",\n    value: function changeReverbPreDelayValue(effectName, value) {\n      var _this$state$reverb2 = this.state.reverb,\n          effect = _this$state$reverb2.effect,\n          wet = _this$state$reverb2.wet,\n          on = _this$state$reverb2.on;\n      effect.preDelay = value;\n      this.setState({\n        reverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFreeverbRoomSizeValue\",\n    value: function changeFreeverbRoomSizeValue(effectName, value) {\n      var _this$state$freeverb = this.state.freeverb,\n          effect = _this$state$freeverb.effect,\n          wet = _this$state$freeverb.wet,\n          on = _this$state$freeverb.on;\n      effect.roomSize = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeTremoloFrequencyValue\",\n    value: function changeTremoloFrequencyValue(effectName, value) {\n      var _this$state$tremolo = this.state.tremolo,\n          effect = _this$state$tremolo.effect,\n          wet = _this$state$tremolo.wet,\n          on = _this$state$tremolo.on;\n      effect.frequency = value;\n      this.setState({\n        tremolo: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeTremoloDepthValue\",\n    value: function changeTremoloDepthValue(effectName, value) {\n      var _this$state$tremolo2 = this.state.tremolo,\n          effect = _this$state$tremolo2.effect,\n          wet = _this$state$tremolo2.wet,\n          on = _this$state$tremolo2.on;\n      effect.depth = value;\n      this.setState({\n        tremolo: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          synth = _this$state2.synth,\n          loop1 = _this$state2.loop1,\n          loop2 = _this$state2.loop2,\n          loop3 = _this$state2.loop3,\n          loop4 = _this$state2.loop4,\n          pattern = _this$state2.pattern;\n      var _togglEffect = this.togglEffect;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, \"Toggle loop 1\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }), \"Toggle loop 2\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }), \"Toggle loop 3\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }), \"Toggle loop 4\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }), \"Toggle pattern\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: pattern.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.togglePattern('pattern');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"EffectContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, this.state.distortion, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('distortion');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      })), React.createElement(FeedbackDelay, Object.assign({}, this.state.feedbackDelay, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('feedbackDelay');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFeedbackDelayValue: this.changeFeedbackDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, this.state.bitCrusher, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('bitCrusher');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeBitCrusherValue: this.changeBitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      })), React.createElement(Reverb, Object.assign({}, this.state.reverb, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('reverb');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeReverbValue: this.changeReverbValue,\n        changeReverbPreDelayValue: this.changeReverbPreDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      })), React.createElement(Tremolo, Object.assign({}, this.state.tremolo, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('tremolo');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeTremoloFrequencyValue: this.changeTremoloFrequencyValue,\n        changeTremoloDepthValue: this.changeTremoloDepthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      })), React.createElement(Freeverb, Object.assign({}, this.state.freeverb, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('freeverb');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFreeverbRoomSizeValue: this.changeFreeverbRoomSizeValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/martsofi/hseadc2017_thereminvox/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","Distortion","FeedbackDelay","BitCrusher","Reverb","Tremolo","Freeverb","JcReverb","Synth","props","autoFilter","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","bits","chebyshev","Chebyshev","order","oversample","chorus","Chorus","delayTime","spread","convolver","Convolver","onload","noOp","normalize","distortion","feedbackDelay","maxDelay","feedbackEffect","FeedbackEffect","feedback","freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","decay","preDelay","stereoWidener","StereoWidener","width","tremolo","vibrato","Vibrato","wet","value","synth","PolySynth","synth1","synth2","synth3","synth4","chain","Master","pattern","Pattern","time","note","triggerAttackRelease","loop1","Loop","loop2","loop3","loop4","state","lastChange","Date","now","timeout","effect","on","instrument","loop","bindAll","generateRandom","min","max","Math","floor","random","getRandomArbitrary","setState","changeDistortionValue","setTimeout","loopName","stop","start","Transport","bpm","loopPattern","effectName","togglEffect","toggleLoop","togglePattern","changeEffectWetValue","changeFeedbackDelayValue","changeBitCrusherValue","changeReverbValue","changeReverbPreDelayValue","changeTremoloFrequencyValue","changeTremoloDepthValue","changeFreeverbRoomSizeValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport PlaySwitch from '../components/PlaySwitch'\nimport Distortion from '../components/effects/Distortion'\nimport FeedbackDelay from '../components/effects/FeedbackDelay'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport Reverb from '../components/effects/Reverb'\nimport Tremolo from '../components/effects/Tremolo'\nimport Freeverb from '../components/effects/Freeverb'\nimport JcReverb from '../components/effects/JcReverb'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 15,\n      type: 'sine',\n      depth: 1\n    })\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    })\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 0\n    })\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    })\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    })\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    })\n\n    let distortion = new Tone.Distortion({\n      // distortion: 0.4,\n      // oversample: 'none'\n      distortion: 0,\n      oversample: '4x'\n    })\n\n    // let effect = new Tone.Effect({\n    //   wet: 1\n    // }).toMaster()\n\n    let feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    })\n\n    let feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    })\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    })\n\n    let jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    })\n\n    // MidSideEffect ???\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    })\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    })\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    })\n\n    let reverb = new Tone.Reverb({\n      decay: 0,\n      preDelay: 0\n    })\n\n    // StereoEffect ???\n    // StereoFeedbackEffect ???\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    })\n\n    // StereoXFeedbackEffect ???\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0,\n      spread: 360\n    })\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    })\n\n    autoFilter.wet.value = 0\n    autoPanner.wet.value = 0\n    autoWah.wet.value = 0\n    bitCrusher.wet.value = 0\n    chebyshev.wet.value = 0\n    chorus.wet.value = 0\n    convolver.wet.value = 0\n    distortion.wet.value = 0\n    feedbackDelay.wet.value = 0\n    feedbackEffect.wet.value = 0\n    freeverb.wet.value = 0\n    jcReverb.wet.value = 0\n    phaser.wet.value = 0\n    pingPongDelay.wet.value = 0\n    pitchShift.wet.value = 0\n    reverb.wet.value = 0\n    stereoWidener.wet.value = 0\n    tremolo.wet.value = 0\n    vibrato.wet.value = 0\n\n    let synth = new Tone.PolySynth()\n    let synth1 = new Tone.Synth()\n    let synth2 = new Tone.Synth()\n    let synth3 = new Tone.Synth()\n    let synth4 = new Tone.Synth()\n\n    synth.chain(\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    let pattern = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease('C2', 'D4', 'E5', 'A6')\n    }, '4n')\n\n    let loop1 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('C2', 'D4', 'E2', '8n', time)\n    }, '4n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('E2', '32n', time)\n    }, '32n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('D2', '1n', time)\n    }, '1n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('A2', '16n', time)\n    }, '16n')\n\n    this.state = {\n      lastChange: Date.now(),\n      timeout: 0,\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: { convolver },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: { pingPongDelay },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      pattern: {\n        pattern: pattern,\n        on: false\n      }\n    }\n\n    _.bindAll(\n      this,\n      'generateRandom',\n      'getRandomArbitrary',\n      'toggleLoop',\n      'changeEffectWetValue',\n      'changeDistortionValue',\n      'togglEffect',\n      'changeFeedbackDelayValue',\n      'changeBitCrusherValue',\n      'changeReverbValue',\n      'changeTremoloFrequencyValue',\n      'changeTremoloDepthValue',\n      'changeFreeverbRoomSizeValue',\n      'changeJcReverbValue',\n      'changeReverbPreDelayValue'\n    )\n  }\n\n  componentDidMount() {\n    this.generateRandom()\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  generateRandom() {\n    const { lastChange, timeout } = this.state\n\n    if (Date.now() - lastChange >= timeout) {\n      const random = this.getRandomArbitrary(100, 3000)\n      this.setState({\n        lastChange: Date.now(),\n        timeout: random\n      })\n\n      this.changeDistortionValue('distortion', random / 30)\n    }\n\n    setTimeout(() => this.generateRandom(), timeout)\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n\n    Tone.Transport.bpm.value = 115\n    Tone.Transport.start()\n  }\n\n  togglePattern(loopPattern) {\n    let { pattern, on } = this.state[loopPattern]\n\n    on == true ? pattern.stop() : pattern.start('0m')\n\n    this.setState({\n      [`${loopPattern}`]: {\n        pattern: pattern,\n        on: !on\n      }\n    })\n  }\n\n  togglEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? value : 0\n\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFeedbackDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackDelay\n\n    effect.maxDelay = value\n\n    this.setState({\n      feedbackDelay: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeBitCrusherValue(effectName, value) {\n    let { effect, wet, on } = this.state.bitCrusher\n\n    effect.bits = value\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeJcReverbValue(effectName, value) {\n    let { effect, wet, on } = this.state.jcReverb\n\n    effect.roomSize = value\n\n    this.setState({\n      jcReverb: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeReverbValue(effectName, value) {\n    let { effect, wet, on } = this.state.reverb\n\n    effect.decay = value\n\n    this.setState({\n      reverb: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeReverbPreDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.reverb\n\n    effect.preDelay = value\n\n    this.setState({\n      reverb: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFreeverbRoomSizeValue(effectName, value) {\n    let { effect, wet, on } = this.state.freeverb\n\n    effect.roomSize = value\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeTremoloFrequencyValue(effectName, value) {\n    let { effect, wet, on } = this.state.tremolo\n\n    effect.frequency = value\n\n    this.setState({\n      tremolo: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeTremoloDepthValue(effectName, value) {\n    let { effect, wet, on } = this.state.tremolo\n\n    effect.depth = value\n\n    this.setState({\n      tremolo: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let { distortion, synth, loop1, loop2, loop3, loop4, pattern } = this.state\n    let { togglEffect } = this\n\n    return (\n      <div>\n        Toggle loop 1\n        <PlaySwitch\n          name=\"play\"\n          value={loop1.on}\n          handleToggleClick={() => this.toggleLoop('loop1')}\n        />\n        Toggle loop 2\n        <PlaySwitch\n          name=\"play\"\n          value={loop2.on}\n          handleToggleClick={() => this.toggleLoop('loop2')}\n        />\n        Toggle loop 3\n        <PlaySwitch\n          name=\"play\"\n          value={loop3.on}\n          handleToggleClick={() => this.toggleLoop('loop3')}\n        />\n        Toggle loop 4\n        <PlaySwitch\n          name=\"play\"\n          value={loop4.on}\n          handleToggleClick={() => this.toggleLoop('loop4')}\n        />\n        Toggle pattern\n        <PlaySwitch\n          name=\"play\"\n          value={pattern.on}\n          handleToggleClick={() => this.togglePattern('pattern')}\n        />\n        <div className=\"EffectContainer\">\n          <Distortion\n            {...this.state.distortion}\n            togglEffect={() => togglEffect('distortion')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeDistortionValue={this.changeDistortionValue}\n          />\n          <FeedbackDelay\n            {...this.state.feedbackDelay}\n            togglEffect={() => togglEffect('feedbackDelay')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeFeedbackDelayValue={this.changeFeedbackDelayValue}\n          />\n          <BitCrusher\n            {...this.state.bitCrusher}\n            togglEffect={() => togglEffect('bitCrusher')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeBitCrusherValue={this.changeBitCrusherValue}\n          />\n          <Reverb\n            {...this.state.reverb}\n            togglEffect={() => togglEffect('reverb')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeReverbValue={this.changeReverbValue}\n            changeReverbPreDelayValue={this.changeReverbPreDelayValue}\n          />\n          <Tremolo\n            {...this.state.tremolo}\n            togglEffect={() => togglEffect('tremolo')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeTremoloFrequencyValue={this.changeTremoloFrequencyValue}\n            changeTremoloDepthValue={this.changeTremoloDepthValue}\n          />\n          <Freeverb\n            {...this.state.freeverb}\n            togglEffect={() => togglEffect('freeverb')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeFreeverbRoomSizeValue={this.changeFreeverbRoomSizeValue}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}