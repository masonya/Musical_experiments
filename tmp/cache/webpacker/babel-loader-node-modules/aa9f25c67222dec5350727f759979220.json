{"ast":null,"code":"import Tone from 'tone';\nexport default function tune0() {\n  // let synth = new Tone.Synth().toMaster()\n  // synth.triggerAttackRelease('A4', '4n')\n  // let pattern = new Tone.Pattern(\n  //   function(time, note) {\n  //     synth.triggerAttackRelease(note, '16n')\n  //   },\n  //   ['C4', 'D4', 'E4', 'G4', 'A4']\n  // )\n  //\n  // pattern.start(0)\n  // let loop = new Tone.Loop(function(time) {\n  //   synth.triggerAttackRelease('C2', '8n', time)\n  // }, '4n')\n  //\n  // loop.start('1m').stop('4m')\n  // let synth = new Tone.Synth({\n  //   oscillator: {\n  //     type: 'pwm',\n  //     modulationFrequency: 0.2\n  //   },\n  //   envelope: {\n  //     attack: 0.02,\n  //     decay: 0.1,\n  //     sustain: 0.2,\n  //     release: 0.1\n  //   }\n  // }).toMaster()\n  //\n  // synth.triggerAttack('D3', '1')\n  // let polySynth = new Tone.PolySynth(4, Tone.Synth).toMaster()\n  // polySynth.triggerAttackRelease(['C4', 'E4', 'G4', 'B4'], '2n')\n  //\n  // let distortion = new Tone.Distortion(0.4).toMaster()\n  // polySynth.connect(distortion)\n  // let pwm = new Tone.PWMOscillator('Bb3').toMaster().start()\n  // let part = new Tone.Part(\n  //   function(time, pitch) {\n  //     synth.triggerAttackRelease(pitch, '8n', time)\n  //   },\n  //   [['0', 'C#3'], ['4n', 'G3'], [3 * Tone.Time('8n'), 'G#3'], ['2n', 'C3']]\n  // )\n  //\n  // part.start('4m')\n  // let env = new Tone.AmplitudeEnvelope({\n  //   attack: 0.11,\n  //   decay: 0.21,\n  //   sustain: 0.5,\n  //   release: 1.2\n  // }).toMaster()\n  //\n  // let osc = new Tone.Oscillator({\n  //   partials: [3, 2, 1],\n  //   type: 'custom',\n  //   frequency: 'C#4',\n  //   volume: -8\n  // })\n  //   .connect(env)\n  //   .start()\n  //\n  // env.triggerAttack()\n  //\n  // let noise = new Tone.Noise({\n  //   volume: -10,\n  //   type: 'brown'\n  // }).toMaster()\n  //\n  // noise.start()\n  // Tone.Transport.bpm.value = 220\n  // Tone.Transport.start()\n  // let note = new Tone.Event(function(time, pitch) {\n  //   synth.triggerAttackRelease(pitch, '16n', time)\n  // }, 'C2')\n  //\n  // note.set({\n  //   loop: true,\n  //   loopEnd: '2n'\n  // })\n  //\n  // note.start(0)\n  // note.stop('4m')\n  // Tone.Transport.scheduleRepeat(\n  //   function(time) {\n  //     synth.triggerAttack(time)\n  //   },\n  //   '8n',\n  //   '1m'\n  // )\n  // let synth = new Tone.Synth({\n  //   oscillator: {\n  //     type: 'amtriangle',\n  //     harmonicity: 0.5,\n  //     modulationType: 'sine'\n  //   },\n  //   envelope: {\n  //     attackCurve: 'exponential',\n  //     attack: 0.05,\n  //     decay: 0.2,\n  //     sustain: 0.2,\n  //     release: 0.4\n  //   },\n  //   portamento: 0.05\n  // }).toMaster()\n  // FM Synth\n  // let synth = new Tone.FMSynth({\n  //   modulationIndex: 12.22,\n  //   envelope: {\n  //     attack: 0.01,\n  //     decay: 0.2\n  //   },\n  //   modulation: {\n  //     type: 'square'\n  //   },\n  //   modulationEnvelope: {\n  //     attack: 0.2,\n  //     decay: 0.01\n  //   }\n  // }).toMaster()\n  // AM Synth\n  // let synth = new Tone.AMSynth({\n  //   harmonicity: 2.5,\n  //   oscillator: {\n  //     type: 'fatsawtooth'\n  //   },\n  //   envelope: {\n  //     attack: 0.1,\n  //     decay: 0.2,\n  //     sustain: 0.2,\n  //     release: 0.3\n  //   },\n  //   modulation: {\n  //     type: 'square'\n  //   },\n  //   modulationEnvelope: {\n  //     attack: 0.5,\n  //     decay: 0.01\n  //   }\n  // }).toMaster()\n  // synth.triggerAttackRelease('C4', synth.envelope.release)\n  // PolySynth\n  // let synth = new Tone.PolySynth(8, Tone.Synth, {\n  //   oscillator: {\n  //     partials: [0, 2, 3, 4]\n  //   }\n  // }).toMaster()\n  // synth.triggerAttackRelease('C4', '8n')\n  var synth = new Tone.PolySynth(3, Tone.Synth, {\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30\n    },\n    envelope: {\n      attack: 0.01,\n      decay: 0.1,\n      sustain: 0.5,\n      release: 0.4,\n      attackCurve: 'exponential'\n    }\n  }).toMaster(); // Van Halen - Jump MIDI from http://www.midiworld.com/files/1121/\n  // converted using\n\n  var part = new Tone.Part(function (time, note) {\n    synth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n  }, [{\n    time: '192i',\n    noteName: 'G4',\n    velocity: 0.8110236220472441,\n    duration: '104i'\n  }, {\n    time: '192i',\n    noteName: 'B4',\n    velocity: 0.7874015748031497,\n    duration: '104i'\n  }, {\n    time: '192i',\n    noteName: 'D5',\n    velocity: 0.8031496062992126,\n    duration: '104i'\n  }, {\n    time: '480i',\n    noteName: 'G4',\n    velocity: 0.7559055118110236,\n    duration: '104i'\n  }, {\n    time: '480i',\n    noteName: 'C5',\n    velocity: 0.6850393700787402,\n    duration: '104i'\n  }, {\n    time: '480i',\n    noteName: 'E5',\n    velocity: 0.6771653543307087,\n    duration: '104i'\n  }, {\n    time: '768i',\n    noteName: 'F4',\n    velocity: 0.8661417322834646,\n    duration: '104i'\n  }, {\n    time: '768i',\n    noteName: 'A4',\n    velocity: 0.8346456692913385,\n    duration: '104i'\n  }, {\n    time: '768i',\n    noteName: 'C5',\n    velocity: 0.8188976377952756,\n    duration: '104i'\n  }, {\n    time: '1056i',\n    noteName: 'F4',\n    velocity: 0.7007874015748031,\n    duration: '104i'\n  }, {\n    time: '1056i',\n    noteName: 'A4',\n    velocity: 0.6850393700787402,\n    duration: '104i'\n  }, {\n    time: '1056i',\n    noteName: 'C5',\n    velocity: 0.6614173228346457,\n    duration: '104i'\n  }, {\n    time: '1248i',\n    noteName: 'G4',\n    velocity: 0.6771653543307087,\n    duration: '104i'\n  }, {\n    time: '1248i',\n    noteName: 'B4',\n    velocity: 0.6771653543307087,\n    duration: '104i'\n  }, {\n    time: '1248i',\n    noteName: 'D5',\n    velocity: 0.7165354330708661,\n    duration: '104i'\n  }, {\n    time: '1440i',\n    noteName: 'G4',\n    velocity: 0.8818897637795275,\n    duration: '248i'\n  }, {\n    time: '1440i',\n    noteName: 'B4',\n    velocity: 0.84251968503937,\n    duration: '248i'\n  }, {\n    time: '1440i',\n    noteName: 'D5',\n    velocity: 0.8818897637795275,\n    duration: '248i'\n  }, {\n    time: '1728i',\n    noteName: 'G4',\n    velocity: 0.8267716535433071,\n    duration: '104i'\n  }, {\n    time: '1728i',\n    noteName: 'C5',\n    velocity: 0.8031496062992126,\n    duration: '104i'\n  }, {\n    time: '1728i',\n    noteName: 'E5',\n    velocity: 0.8188976377952756,\n    duration: '104i'\n  }, {\n    time: '2016i',\n    noteName: 'F4',\n    velocity: 0.7086614173228346,\n    duration: '104i'\n  }, {\n    time: '2016i',\n    noteName: 'A4',\n    velocity: 0.7244094488188977,\n    duration: '104i'\n  }, {\n    time: '2016i',\n    noteName: 'C5',\n    velocity: 0.7007874015748031,\n    duration: '104i'\n  }, {\n    time: '2208i',\n    noteName: 'C4',\n    velocity: 0.9921259842519685,\n    duration: '296i'\n  }, {\n    time: '2208i',\n    noteName: 'F4',\n    velocity: 0.968503937007874,\n    duration: '200i'\n  }, {\n    time: '2208i',\n    noteName: 'A4',\n    velocity: 0.9606299212598425,\n    duration: '208i'\n  }, {\n    time: '2400i',\n    noteName: 'E4',\n    velocity: 0.7559055118110236,\n    duration: '104i'\n  }, {\n    time: '2400i',\n    noteName: 'G4',\n    velocity: 0.7007874015748031,\n    duration: '104i'\n  }, {\n    time: '2592i',\n    noteName: 'C4',\n    velocity: 0.968503937007874,\n    duration: '488i'\n  }, {\n    time: '2592i',\n    noteName: 'D4',\n    velocity: 0.9448818897637795,\n    duration: '488i'\n  }, {\n    time: '2592i',\n    noteName: 'G4',\n    velocity: 0.937007874015748,\n    duration: '488i'\n  }]).start(0);\n  part.loop = true;\n  part.loopEnd = '4m';\n  Tone.Transport.bpm.value = 132;\n  Tone.Transport.start(); // let bell = new Tone.MetalSynth({\n  //   harmonicity: 12,\n  //   resonance: 800,\n  //   modulationIndex: 20,\n  //   envelope: {\n  //     decay: 0.4\n  //   },\n  //   volume: -15\n  // }).toMaster()\n  //\n  // let bellPart = new Tone.Sequence(\n  //   function(time, freq) {\n  //     bell.frequency.setValueAtTime(freq, time, Math.random() * 0.5 + 0.5)\n  //     bell.triggerAttack(time)\n  //   },\n  //   [[300, null, 200], [null, 200, 200], [null, 200, null], [200, null, 200]],\n  //   '4n'\n  // ).start(0)\n  //\n  // // bellPart.loop = true;\n  // // bellPart.loopEnd = \"1m\";\n  //\n  // let conga = new Tone.MembraneSynth({\n  //   pitchDecay: 0.008,\n  //   octaves: 2,\n  //   envelope: {\n  //     attack: 0.0006,\n  //     decay: 0.5,\n  //     sustain: 0\n  //   }\n  // }).toMaster()\n  //\n  // let congaPart = new Tone.Sequence(\n  //   function(time, pitch) {\n  //     conga.triggerAttack(pitch, time, Math.random() * 0.5 + 0.5)\n  //   },\n  //   ['G3', 'C4', 'C4', 'C4'],\n  //   '4n'\n  // ).start(0)\n  //\n  // // congaPart.loop = true;\n  // // congaPart.loopEnd = \"1m\";\n  //\n  // Tone.Transport.bpm.value = 115\n  // Tone.Transport.start()\n}","map":{"version":3,"sources":["/Users/martsofi/DZmusic/app/javascript/components/tunes/tune0.js"],"names":["Tone","tune0","synth","PolySynth","Synth","oscillator","type","count","spread","envelope","attack","decay","sustain","release","attackCurve","toMaster","part","Part","time","note","triggerAttackRelease","noteName","duration","velocity","start","loop","loopEnd","Transport","bpm","value"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAIC,KAAK,GAAG,IAAIF,IAAI,CAACG,SAAT,CAAmB,CAAnB,EAAsBH,IAAI,CAACI,KAA3B,EAAkC;AAC5CC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,aADI;AAEVC,MAAAA,KAAK,EAAE,CAFG;AAGVC,MAAAA,MAAM,EAAE;AAHE,KADgC;AAM5CC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,IADA;AAERC,MAAAA,KAAK,EAAE,GAFC;AAGRC,MAAAA,OAAO,EAAE,GAHD;AAIRC,MAAAA,OAAO,EAAE,GAJD;AAKRC,MAAAA,WAAW,EAAE;AALL;AANkC,GAAlC,EAaTC,QAbS,EAAZ,CAnK8B,CAkL9B;AACA;;AAEA,MAAIC,IAAI,GA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","sourcesContent":["import Tone from 'tone'\n\nexport default function tune0() {\n  // let synth = new Tone.Synth().toMaster()\n  // synth.triggerAttackRelease('A4', '4n')\n\n  // let pattern = new Tone.Pattern(\n  //   function(time, note) {\n  //     synth.triggerAttackRelease(note, '16n')\n  //   },\n  //   ['C4', 'D4', 'E4', 'G4', 'A4']\n  // )\n  //\n  // pattern.start(0)\n\n  // let loop = new Tone.Loop(function(time) {\n  //   synth.triggerAttackRelease('C2', '8n', time)\n  // }, '4n')\n  //\n  // loop.start('1m').stop('4m')\n\n  // let synth = new Tone.Synth({\n  //   oscillator: {\n  //     type: 'pwm',\n  //     modulationFrequency: 0.2\n  //   },\n  //   envelope: {\n  //     attack: 0.02,\n  //     decay: 0.1,\n  //     sustain: 0.2,\n  //     release: 0.1\n  //   }\n  // }).toMaster()\n  //\n  // synth.triggerAttack('D3', '1')\n\n  // let polySynth = new Tone.PolySynth(4, Tone.Synth).toMaster()\n  // polySynth.triggerAttackRelease(['C4', 'E4', 'G4', 'B4'], '2n')\n  //\n  // let distortion = new Tone.Distortion(0.4).toMaster()\n  // polySynth.connect(distortion)\n\n  // let pwm = new Tone.PWMOscillator('Bb3').toMaster().start()\n\n  // let part = new Tone.Part(\n  //   function(time, pitch) {\n  //     synth.triggerAttackRelease(pitch, '8n', time)\n  //   },\n  //   [['0', 'C#3'], ['4n', 'G3'], [3 * Tone.Time('8n'), 'G#3'], ['2n', 'C3']]\n  // )\n  //\n  // part.start('4m')\n\n  // let env = new Tone.AmplitudeEnvelope({\n  //   attack: 0.11,\n  //   decay: 0.21,\n  //   sustain: 0.5,\n  //   release: 1.2\n  // }).toMaster()\n  //\n  // let osc = new Tone.Oscillator({\n  //   partials: [3, 2, 1],\n  //   type: 'custom',\n  //   frequency: 'C#4',\n  //   volume: -8\n  // })\n  //   .connect(env)\n  //   .start()\n  //\n  // env.triggerAttack()\n  //\n  // let noise = new Tone.Noise({\n  //   volume: -10,\n  //   type: 'brown'\n  // }).toMaster()\n  //\n  // noise.start()\n\n  // Tone.Transport.bpm.value = 220\n  // Tone.Transport.start()\n\n  // let note = new Tone.Event(function(time, pitch) {\n  //   synth.triggerAttackRelease(pitch, '16n', time)\n  // }, 'C2')\n  //\n  // note.set({\n  //   loop: true,\n  //   loopEnd: '2n'\n  // })\n  //\n  // note.start(0)\n  // note.stop('4m')\n\n  // Tone.Transport.scheduleRepeat(\n  //   function(time) {\n  //     synth.triggerAttack(time)\n  //   },\n  //   '8n',\n  //   '1m'\n  // )\n\n  // let synth = new Tone.Synth({\n  //   oscillator: {\n  //     type: 'amtriangle',\n  //     harmonicity: 0.5,\n  //     modulationType: 'sine'\n  //   },\n  //   envelope: {\n  //     attackCurve: 'exponential',\n  //     attack: 0.05,\n  //     decay: 0.2,\n  //     sustain: 0.2,\n  //     release: 0.4\n  //   },\n  //   portamento: 0.05\n  // }).toMaster()\n\n  // FM Synth\n  // let synth = new Tone.FMSynth({\n  //   modulationIndex: 12.22,\n  //   envelope: {\n  //     attack: 0.01,\n  //     decay: 0.2\n  //   },\n  //   modulation: {\n  //     type: 'square'\n  //   },\n  //   modulationEnvelope: {\n  //     attack: 0.2,\n  //     decay: 0.01\n  //   }\n  // }).toMaster()\n\n  // AM Synth\n  // let synth = new Tone.AMSynth({\n  //   harmonicity: 2.5,\n  //   oscillator: {\n  //     type: 'fatsawtooth'\n  //   },\n  //   envelope: {\n  //     attack: 0.1,\n  //     decay: 0.2,\n  //     sustain: 0.2,\n  //     release: 0.3\n  //   },\n  //   modulation: {\n  //     type: 'square'\n  //   },\n  //   modulationEnvelope: {\n  //     attack: 0.5,\n  //     decay: 0.01\n  //   }\n  // }).toMaster()\n\n  // synth.triggerAttackRelease('C4', synth.envelope.release)\n\n  // PolySynth\n  // let synth = new Tone.PolySynth(8, Tone.Synth, {\n  //   oscillator: {\n  //     partials: [0, 2, 3, 4]\n  //   }\n  // }).toMaster()\n\n  // synth.triggerAttackRelease('C4', '8n')\n\n  let synth = new Tone.PolySynth(3, Tone.Synth, {\n    oscillator: {\n      type: 'fatsawtooth',\n      count: 3,\n      spread: 30\n    },\n    envelope: {\n      attack: 0.01,\n      decay: 0.1,\n      sustain: 0.5,\n      release: 0.4,\n      attackCurve: 'exponential'\n    }\n  }).toMaster()\n\n  // Van Halen - Jump MIDI from http://www.midiworld.com/files/1121/\n  // converted using\n\n  let part = new Tone.Part(\n    function(time, note) {\n      synth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    },\n    [\n      {\n        time: '192i',\n        noteName: 'G4',\n        velocity: 0.8110236220472441,\n        duration: '104i'\n      },\n      {\n        time: '192i',\n        noteName: 'B4',\n        velocity: 0.7874015748031497,\n        duration: '104i'\n      },\n      {\n        time: '192i',\n        noteName: 'D5',\n        velocity: 0.8031496062992126,\n        duration: '104i'\n      },\n      {\n        time: '480i',\n        noteName: 'G4',\n        velocity: 0.7559055118110236,\n        duration: '104i'\n      },\n      {\n        time: '480i',\n        noteName: 'C5',\n        velocity: 0.6850393700787402,\n        duration: '104i'\n      },\n      {\n        time: '480i',\n        noteName: 'E5',\n        velocity: 0.6771653543307087,\n        duration: '104i'\n      },\n      {\n        time: '768i',\n        noteName: 'F4',\n        velocity: 0.8661417322834646,\n        duration: '104i'\n      },\n      {\n        time: '768i',\n        noteName: 'A4',\n        velocity: 0.8346456692913385,\n        duration: '104i'\n      },\n      {\n        time: '768i',\n        noteName: 'C5',\n        velocity: 0.8188976377952756,\n        duration: '104i'\n      },\n      {\n        time: '1056i',\n        noteName: 'F4',\n        velocity: 0.7007874015748031,\n        duration: '104i'\n      },\n      {\n        time: '1056i',\n        noteName: 'A4',\n        velocity: 0.6850393700787402,\n        duration: '104i'\n      },\n      {\n        time: '1056i',\n        noteName: 'C5',\n        velocity: 0.6614173228346457,\n        duration: '104i'\n      },\n      {\n        time: '1248i',\n        noteName: 'G4',\n        velocity: 0.6771653543307087,\n        duration: '104i'\n      },\n      {\n        time: '1248i',\n        noteName: 'B4',\n        velocity: 0.6771653543307087,\n        duration: '104i'\n      },\n      {\n        time: '1248i',\n        noteName: 'D5',\n        velocity: 0.7165354330708661,\n        duration: '104i'\n      },\n      {\n        time: '1440i',\n        noteName: 'G4',\n        velocity: 0.8818897637795275,\n        duration: '248i'\n      },\n      {\n        time: '1440i',\n        noteName: 'B4',\n        velocity: 0.84251968503937,\n        duration: '248i'\n      },\n      {\n        time: '1440i',\n        noteName: 'D5',\n        velocity: 0.8818897637795275,\n        duration: '248i'\n      },\n      {\n        time: '1728i',\n        noteName: 'G4',\n        velocity: 0.8267716535433071,\n        duration: '104i'\n      },\n      {\n        time: '1728i',\n        noteName: 'C5',\n        velocity: 0.8031496062992126,\n        duration: '104i'\n      },\n      {\n        time: '1728i',\n        noteName: 'E5',\n        velocity: 0.8188976377952756,\n        duration: '104i'\n      },\n      {\n        time: '2016i',\n        noteName: 'F4',\n        velocity: 0.7086614173228346,\n        duration: '104i'\n      },\n      {\n        time: '2016i',\n        noteName: 'A4',\n        velocity: 0.7244094488188977,\n        duration: '104i'\n      },\n      {\n        time: '2016i',\n        noteName: 'C5',\n        velocity: 0.7007874015748031,\n        duration: '104i'\n      },\n      {\n        time: '2208i',\n        noteName: 'C4',\n        velocity: 0.9921259842519685,\n        duration: '296i'\n      },\n      {\n        time: '2208i',\n        noteName: 'F4',\n        velocity: 0.968503937007874,\n        duration: '200i'\n      },\n      {\n        time: '2208i',\n        noteName: 'A4',\n        velocity: 0.9606299212598425,\n        duration: '208i'\n      },\n      {\n        time: '2400i',\n        noteName: 'E4',\n        velocity: 0.7559055118110236,\n        duration: '104i'\n      },\n      {\n        time: '2400i',\n        noteName: 'G4',\n        velocity: 0.7007874015748031,\n        duration: '104i'\n      },\n      {\n        time: '2592i',\n        noteName: 'C4',\n        velocity: 0.968503937007874,\n        duration: '488i'\n      },\n      {\n        time: '2592i',\n        noteName: 'D4',\n        velocity: 0.9448818897637795,\n        duration: '488i'\n      },\n      {\n        time: '2592i',\n        noteName: 'G4',\n        velocity: 0.937007874015748,\n        duration: '488i'\n      }\n    ]\n  ).start(0)\n\n  part.loop = true\n  part.loopEnd = '4m'\n\n  Tone.Transport.bpm.value = 132\n  Tone.Transport.start()\n\n  // let bell = new Tone.MetalSynth({\n  //   harmonicity: 12,\n  //   resonance: 800,\n  //   modulationIndex: 20,\n  //   envelope: {\n  //     decay: 0.4\n  //   },\n  //   volume: -15\n  // }).toMaster()\n  //\n  // let bellPart = new Tone.Sequence(\n  //   function(time, freq) {\n  //     bell.frequency.setValueAtTime(freq, time, Math.random() * 0.5 + 0.5)\n  //     bell.triggerAttack(time)\n  //   },\n  //   [[300, null, 200], [null, 200, 200], [null, 200, null], [200, null, 200]],\n  //   '4n'\n  // ).start(0)\n  //\n  // // bellPart.loop = true;\n  // // bellPart.loopEnd = \"1m\";\n  //\n  // let conga = new Tone.MembraneSynth({\n  //   pitchDecay: 0.008,\n  //   octaves: 2,\n  //   envelope: {\n  //     attack: 0.0006,\n  //     decay: 0.5,\n  //     sustain: 0\n  //   }\n  // }).toMaster()\n  //\n  // let congaPart = new Tone.Sequence(\n  //   function(time, pitch) {\n  //     conga.triggerAttack(pitch, time, Math.random() * 0.5 + 0.5)\n  //   },\n  //   ['G3', 'C4', 'C4', 'C4'],\n  //   '4n'\n  // ).start(0)\n  //\n  // // congaPart.loop = true;\n  // // congaPart.loopEnd = \"1m\";\n  //\n  // Tone.Transport.bpm.value = 115\n  // Tone.Transport.start()\n}\n"]},"metadata":{},"sourceType":"module"}