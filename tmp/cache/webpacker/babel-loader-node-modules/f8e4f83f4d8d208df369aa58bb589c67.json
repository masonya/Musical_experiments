{"ast":null,"code":"var _jsxFileName = \"/Users/martsofi/hseadc2017_thereminvox/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport PlaySwitch from '../components/PlaySwitch';\nimport Distortion from '../components/effects/Distortion';\nimport FeedbackDelay from '../components/effects/FeedbackDelay';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 15,\n      type: 'sine',\n      depth: 1\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var distortion = new Tone.Distortion({\n      // distortion: 0.4,\n      // oversample: 'none'\n      distortion: 0,\n      oversample: '4x'\n    }); // let effect = new Tone.Effect({\n    //   wet: 1\n    // }).toMaster()\n\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    }); // MidSideEffect ???\n\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    }); // StereoEffect ???\n    // StereoFeedbackEffect ???\n\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    }); // StereoXFeedbackEffect ???\n\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0,\n      spread: 360\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    });\n    autoFilter.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    distortion.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    tremolo.wet.value = 0;\n    vibrato.wet.value = 0;\n    var synth = new Tone.PolySynth();\n    var synth1 = new Tone.Synth();\n    var synth2 = new Tone.Synth();\n    var synth3 = new Tone.Synth();\n    var synth4 = new Tone.Synth();\n    synth.chain(autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master);\n    var loop1 = new Tone.Loop(function (time) {\n      loop.triggerAttackRelease('C2', '8n', time);\n    }, '4n');\n    var loop2 = new Tone.Loop(function (time) {\n      loop.triggerAttackRelease('E2', '32n', time);\n    }, '32n');\n    var loop3 = new Tone.Loop(function (time) {\n      loop.triggerAttackRelease('D2', '1n', time);\n    }, '1n');\n    var loop4 = new Tone.Loop(function (time) {\n      loop.triggerAttackRelease('A2', '16n', time);\n    }, '16n');\n    _this.state = {\n      // lastChange: Date().now,\n      // timeout: 0,\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        convolver: convolver\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        pingPongDelay: pingPongDelay\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), // 'generateRandom',\n    // 'getRandomArbitrary',\n    'toggleLoop', // 'toggleDistortion',\n    'changeEffectWetValue', 'changeDistortionValue', 'toggleTremolo', 'changeTremoloWetValue', 'changeTremoloValue', 'toggleAutoPanner', 'changeAutoPannerWetValue', 'changeAutoPannerValue', 'togglEffect', 'changeFeedbackDelayValue');\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n    return _this;\n  } // componentDidMount() {\n  //   this.generateRandom()\n  // }\n  //\n  // getRandomArbitrary(min, max) {\n  //   return Math.floor(Math.random() * (max - min)) + min\n  // }\n  //\n  // generateRandom() {\n  //   const { lastChange, timeout } = this.state\n  //\n  //   if (Date.now() - lastChange >= timeout) {\n  //     const random = this.getRandomArbitrary(100, 3000)\n  //     this.setState({\n  //       lastChange: Date.now(),\n  //       timeout: random\n  //     })\n  //\n  //     this.changeDistortionValue('distortion', random / 10)\n  //   }\n  //\n  //   setTimeout(() => this.generateRandom(), timeout)\n  //   // this.generateRandom()\n  // }\n\n\n  _createClass(Synth, [{\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"togglEffect\",\n    value: function togglEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"toggleTremolo\",\n    value: function toggleTremolo() {\n      var _this$state$tremolo = this.state.tremolo,\n          effect = _this$state$tremolo.effect,\n          wet = _this$state$tremolo.wet,\n          on = _this$state$tremolo.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState({\n        tremolo: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleAutoPanner\",\n    value: function toggleAutoPanner() {\n      var _this$state$autoPanne = this.state.autoPanner,\n          effect = _this$state$autoPanne.effect,\n          wet = _this$state$autoPanne.wet,\n          on = _this$state$autoPanne.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeTremoloWetValue\",\n    value: function changeTremoloWetValue(value) {\n      var _this$state$tremolo2 = this.state.tremolo,\n          effect = _this$state$tremolo2.effect,\n          wet = _this$state$tremolo2.wet,\n          on = _this$state$tremolo2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        tremolo: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoPannerWetValue\",\n    value: function changeAutoPannerWetValue(value) {\n      var _this$state$autoPanne2 = this.state.autoPanner,\n          effect = _this$state$autoPanne2.effect,\n          wet = _this$state$autoPanne2.wet,\n          on = _this$state$autoPanne2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayValue\",\n    value: function changeFeedbackDelayValue(effectName, value) {\n      var _this$state$feedbackD = this.state.feedbackDelay,\n          effect = _this$state$feedbackD.effect,\n          wet = _this$state$feedbackD.wet,\n          on = _this$state$feedbackD.on;\n      effect.maxDelay = value;\n      this.setState({\n        feedbackDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeTremoloValue\",\n    value: function changeTremoloValue(value) {\n      var _this$state$tremolo3 = this.state.tremolo,\n          effect = _this$state$tremolo3.effect,\n          wet = _this$state$tremolo3.wet,\n          on = _this$state$tremolo3.on;\n      effect.depth = value; // console.log('depth', depth)\n\n      this.setState({\n        tremolo: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoPannerValue\",\n    value: function changeAutoPannerValue(value) {\n      var _this$state$autoPanne3 = this.state.autoPanner,\n          effect = _this$state$autoPanne3.effect,\n          wet = _this$state$autoPanne3.wet,\n          on = _this$state$autoPanne3.on;\n      effect.frequency = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          distortion = _this$state.distortion,\n          tremolo = _this$state.tremolo,\n          synth = _this$state.synth,\n          autoPanner = _this$state.autoPanner,\n          loop1 = _this$state.loop1,\n          loop2 = _this$state.loop2,\n          loop3 = _this$state.loop3,\n          loop4 = _this$state.loop4;\n      var _togglEffect = this.togglEffect;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, \"Toggle loop 1\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }), \"Toggle loop 2\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }), \"Toggle loop 3\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }), \"Toggle loop 4\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }), React.createElement(Distortion, Object.assign({}, this.state.distortion, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('distortion');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      })), React.createElement(FeedbackDelay, Object.assign({}, this.state.feedbackDelay, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('feedbackDelay');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFeedbackDelayValue: this.changeFeedbackDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/martsofi/hseadc2017_thereminvox/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","Distortion","FeedbackDelay","Synth","props","autoFilter","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","oversample","chorus","Chorus","delayTime","spread","convolver","Convolver","onload","noOp","normalize","distortion","feedbackDelay","maxDelay","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","tremolo","Tremolo","vibrato","Vibrato","wet","value","synth","PolySynth","synth1","synth2","synth3","synth4","chain","Master","loop1","Loop","time","loop","triggerAttackRelease","loop2","loop3","loop4","state","effect","on","instrument","bindAll","Transport","bpm","start","loopName","stop","setState","effectName","togglEffect","toggleLoop","changeEffectWetValue","changeDistortionValue","changeFeedbackDelayValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport PlaySwitch from '../components/PlaySwitch'\nimport Distortion from '../components/effects/Distortion'\nimport FeedbackDelay from '../components/effects/FeedbackDelay'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 15,\n      type: 'sine',\n      depth: 1\n    })\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    })\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    })\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    })\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    })\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    })\n\n    let distortion = new Tone.Distortion({\n      // distortion: 0.4,\n      // oversample: 'none'\n      distortion: 0,\n      oversample: '4x'\n    })\n\n    // let effect = new Tone.Effect({\n    //   wet: 1\n    // }).toMaster()\n\n    let feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    })\n\n    let feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    })\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    })\n\n    let jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    })\n\n    // MidSideEffect ???\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    })\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    })\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    })\n\n    let reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    })\n\n    // StereoEffect ???\n    // StereoFeedbackEffect ???\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    })\n\n    // StereoXFeedbackEffect ???\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0,\n      spread: 360\n    })\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    })\n\n    autoFilter.wet.value = 0\n    autoPanner.wet.value = 0\n    autoWah.wet.value = 0\n    bitCrusher.wet.value = 0\n    chebyshev.wet.value = 0\n    chorus.wet.value = 0\n    convolver.wet.value = 0\n    distortion.wet.value = 0\n    feedbackDelay.wet.value = 0\n    feedbackEffect.wet.value = 0\n    freeverb.wet.value = 0\n    jcReverb.wet.value = 0\n    phaser.wet.value = 0\n    pingPongDelay.wet.value = 0\n    pitchShift.wet.value = 0\n    reverb.wet.value = 0\n    stereoWidener.wet.value = 0\n    tremolo.wet.value = 0\n    vibrato.wet.value = 0\n\n    let synth = new Tone.PolySynth()\n    let synth1 = new Tone.Synth()\n    let synth2 = new Tone.Synth()\n    let synth3 = new Tone.Synth()\n    let synth4 = new Tone.Synth()\n\n    synth.chain(\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    let loop1 = new Tone.Loop(function(time) {\n      loop.triggerAttackRelease('C2', '8n', time)\n    }, '4n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      loop.triggerAttackRelease('E2', '32n', time)\n    }, '32n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      loop.triggerAttackRelease('D2', '1n', time)\n    }, '1n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      loop.triggerAttackRelease('A2', '16n', time)\n    }, '16n')\n\n    this.state = {\n      // lastChange: Date().now,\n      // timeout: 0,\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: { convolver },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: { pingPongDelay },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      }\n    }\n\n    _.bindAll(\n      this,\n      // 'generateRandom',\n      // 'getRandomArbitrary',\n      'toggleLoop',\n      // 'toggleDistortion',\n      'changeEffectWetValue',\n      'changeDistortionValue',\n      'toggleTremolo',\n      'changeTremoloWetValue',\n      'changeTremoloValue',\n      'toggleAutoPanner',\n      'changeAutoPannerWetValue',\n      'changeAutoPannerValue',\n      'togglEffect',\n      'changeFeedbackDelayValue'\n    )\n\n    Tone.Transport.bpm.value = 115\n    Tone.Transport.start()\n  }\n\n  // componentDidMount() {\n  //   this.generateRandom()\n  // }\n  //\n  // getRandomArbitrary(min, max) {\n  //   return Math.floor(Math.random() * (max - min)) + min\n  // }\n  //\n  // generateRandom() {\n  //   const { lastChange, timeout } = this.state\n  //\n  //   if (Date.now() - lastChange >= timeout) {\n  //     const random = this.getRandomArbitrary(100, 3000)\n  //     this.setState({\n  //       lastChange: Date.now(),\n  //       timeout: random\n  //     })\n  //\n  //     this.changeDistortionValue('distortion', random / 10)\n  //   }\n  //\n  //   setTimeout(() => this.generateRandom(), timeout)\n  //   // this.generateRandom()\n  // }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  togglEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  toggleTremolo() {\n    let { effect, wet, on } = this.state.tremolo\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      tremolo: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  toggleAutoPanner() {\n    let { effect, wet, on } = this.state.autoPanner\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? value : 0\n\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeTremoloWetValue(value) {\n    let { effect, wet, on } = this.state.tremolo\n\n    effect.wet.value = on == true ? value : 0\n\n    wet = value\n\n    this.setState({\n      tremolo: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeAutoPannerWetValue(value) {\n    let { effect, wet, on } = this.state.autoPanner\n\n    effect.wet.value = on == true ? value : 0\n\n    wet = value\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFeedbackDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackDelay\n\n    effect.maxDelay = value\n\n    this.setState({\n      feedbackDelay: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeTremoloValue(value) {\n    let { effect, wet, on } = this.state.tremolo\n\n    effect.depth = value\n    // console.log('depth', depth)\n\n    this.setState({\n      tremolo: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeAutoPannerValue(value) {\n    let { effect, wet, on } = this.state.autoPanner\n\n    effect.frequency = value\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let {\n      distortion,\n      tremolo,\n      synth,\n      autoPanner,\n      loop1,\n      loop2,\n      loop3,\n      loop4\n    } = this.state\n    let { togglEffect } = this\n\n    return (\n      <div>\n        Toggle loop 1\n        <PlaySwitch\n          name=\"play\"\n          value={loop1.on}\n          handleToggleClick={() => this.toggleLoop('loop1')}\n        />\n        Toggle loop 2\n        <PlaySwitch\n          name=\"play\"\n          value={loop2.on}\n          handleToggleClick={() => this.toggleLoop('loop2')}\n        />\n        Toggle loop 3\n        <PlaySwitch\n          name=\"play\"\n          value={loop3.on}\n          handleToggleClick={() => this.toggleLoop('loop3')}\n        />\n        Toggle loop 4\n        <PlaySwitch\n          name=\"play\"\n          value={loop4.on}\n          handleToggleClick={() => this.toggleLoop('loop4')}\n        />\n        <Distortion\n          {...this.state.distortion}\n          togglEffect={() => togglEffect('distortion')}\n          changeEffectWetValue={this.changeEffectWetValue}\n          changeDistortionValue={this.changeDistortionValue}\n        />\n        <FeedbackDelay\n          {...this.state.feedbackDelay}\n          togglEffect={() => togglEffect('feedbackDelay')}\n          changeEffectWetValue={this.changeEffectWetValue}\n          changeFeedbackDelayValue={this.changeFeedbackDelayValue}\n        />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}