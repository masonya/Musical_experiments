{"ast":null,"code":"import Tone from 'tone';\nexport default function tune3() {\n  var reverb = new Tone.Reverb({\n    decay: 1.5,\n    preDelay: 0.01\n  }).toMaster();\n  var panner = new Tone.AutoPanner({\n    frequency: 4,\n    depth: 1\n  }).toMaster();\n  var filter = new Tone.AutoFilter({\n    frequency: 2,\n    depth: 0.6\n  }).toMaster();\n  var tremolo = new Tone.Tremolo({\n    frequency: 3,\n    depth: 2\n  }).toMaster();\n  var feedbackDelay = new Tone.FeedbackDelay('4n', 0.8).toMaster();\n  var dist = new Tone.Distortion({\n    distortion: 1,\n    oversample: '4x'\n  }).toMaster();\n  var cheby = new Tone.Chebyshev(50);\n  var crusher = new Tone.BitCrusher(8).toMaster();\n  var phaser = new Tone.Phaser({\n    frequency: 15,\n    octaves: 5,\n    baseFrequency: 1000\n  }).toMaster();\n  var synth = new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      // fatsawtooth\n      type: 'fatsawtooth',\n      count: 1 // spread: 30,\n      // phase: 10\n      // fadeIn: 4\n\n    } // envelope: {\n    //   attack: 1,\n    //   decay: 1,\n    //   sustain: 1,\n    //   release: 5,\n    //   attackCurve: 'exponential'\n    // }\n\n  }).toMaster(); // synth.connect(panner)\n  // synth.connect(filter)\n  // synth.connect(cheby)\n  // // synth.connect(crusher)\n  // synth.connect(dist)\n  // synth.connect(feedbackDelay)\n  // synth.connect(tremolo)\n  // synth.connect(phaser)\n  // synth.connect(reverb)\n\n  var synth2 = new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      // fatsawtooth\n      type: 'sine' // count: 1,\n      // spread: 30\n      // phase: 10\n      // fadeIn: 4\n\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  }).toMaster();\n  synth2.connect(panner);\n  synth2.connect(filter); // synth2.connect(cheby)\n  // synth.connect(crusher)\n\n  synth2.connect(dist);\n  synth2.connect(feedbackDelay); // synth2.connect(tremolo)\n  // synth2.connect(phaser)\n\n  synth2.connect(reverb);\n  var synth3 = new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      // fatsawtooth\n      type: 'square' // count: 1,\n      // spread: 30\n      // phase: 10\n      // fadeIn: 4\n\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1,\n      attackCurve: 'exponential'\n    }\n  }).toMaster();\n  synth3.connect(panner);\n  synth3.connect(filter); // synth2.connect(cheby)\n  // synth.connect(crusher)\n\n  synth3.connect(dist);\n  synth3.connect(feedbackDelay); // synth2.connect(tremolo)\n  // synth2.connect(phaser)\n\n  synth3.connect(reverb);\n  var part = new Tone.Part(function (time, note) {\n    synth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n  }, [{\n    time: '0:0:0',\n    noteName: 'C3',\n    velocity: 1,\n    duration: '4n'\n  }, {\n    time: '1:0:0',\n    noteName: 'E3',\n    velocity: 1,\n    duration: '4n'\n  }, {\n    time: '2:0:0',\n    noteName: 'A2',\n    velocity: 1,\n    duration: '4n'\n  }, {\n    time: '3:0:0',\n    noteName: 'G2',\n    velocity: 1,\n    duration: '4n'\n  }, {\n    time: '4:0:0',\n    noteName: 'E2',\n    velocity: 1,\n    duration: '4n'\n  }, {\n    time: '5:0:0',\n    noteName: 'F2',\n    velocity: 1,\n    duration: '4n'\n  }, {\n    time: '6:0:0',\n    noteName: 'A2',\n    velocity: 1,\n    duration: '4n'\n  }, {\n    time: '7:0:0',\n    noteName: 'D3',\n    velocity: 1,\n    duration: '4n'\n  }]); //.start(0)\n  // part.loop = true\n  // part.loopEnd = '8m'\n\n  var part2 = new Tone.Part(function (time, note) {\n    synth2.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n  }, [{\n    time: '0:0:0',\n    noteName: 'C3',\n    velocity: 1,\n    duration: '32n'\n  }, {\n    time: '0:1:0',\n    noteName: 'E3',\n    velocity: 1,\n    duration: '32n'\n  }, {\n    time: '0:2:0',\n    noteName: 'A2',\n    velocity: 1,\n    duration: '32n'\n  }, {\n    time: '0:3:0',\n    noteName: 'G2',\n    velocity: 1,\n    duration: '32n'\n  }, {\n    time: '1:0:0',\n    noteName: 'E2',\n    velocity: 1,\n    duration: '32n'\n  }, {\n    time: '1:1:0',\n    noteName: 'F2',\n    velocity: 1,\n    duration: '32n'\n  }, {\n    time: '1:2:0',\n    noteName: 'A2',\n    velocity: 1,\n    duration: '32n'\n  }, {\n    time: '1:3:0',\n    noteName: 'D3',\n    velocity: 1,\n    duration: '32n'\n  }]); //.start(0)\n  // part2.loop = true\n  // part2.loopEnd = '2m'\n\n  var part3 = new Tone.Part(function (time, note) {\n    synth3.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n  }, [{\n    time: '0:0:0',\n    noteName: 'C5',\n    velocity: 0.3,\n    duration: '32n'\n  }, {\n    time: '0:1:3',\n    noteName: 'E5',\n    velocity: 0.3,\n    duration: '32n'\n  }, {\n    time: '1:2:2',\n    noteName: 'A5',\n    velocity: 0.3,\n    duration: '32n'\n  } // {\n  //   time: '0:3:0',\n  //   noteName: 'G5',\n  //   velocity: 1,\n  //   duration: '32n'\n  // },\n  // {\n  //   time: '1:0:0',\n  //   noteName: 'E4',\n  //   velocity: 1,\n  //   duration: '32n'\n  // },\n  // {\n  //   time: '1:1:0',\n  //   noteName: 'F4',\n  //   velocity: 1,\n  //   duration: '32n'\n  // },\n  // {\n  //   time: '1:2:0',\n  //   noteName: 'A5',\n  //   velocity: 1,\n  //   duration: '32n'\n  // },\n  // {\n  //   time: '1:3:0',\n  //   noteName: 'D5',\n  //   velocity: 1,\n  //   duration: '32n'\n  // }\n  ]).start(0);\n  part3.loop = true;\n  part3.loopEnd = '2m'; // Tone.Transport.bpm.value = 132\n\n  Tone.Transport.bpm.value = 60;\n  Tone.Transport.start();\n}","map":{"version":3,"sources":["/Users/martsofi/DZmusic/app/javascript/components/tunes/tune3.js"],"names":["Tone","tune3","reverb","Reverb","decay","preDelay","toMaster","panner","AutoPanner","frequency","depth","filter","AutoFilter","tremolo","Tremolo","feedbackDelay","FeedbackDelay","dist","Distortion","distortion","oversample","cheby","Chebyshev","crusher","BitCrusher","phaser","Phaser","octaves","baseFrequency","synth","PolySynth","Synth","oscillator","type","count","synth2","envelope","attack","sustain","release","attackCurve","connect","synth3","part","Part","time","note","triggerAttackRelease","noteName","duration","velocity","part2","part3","start","loop","loopEnd","Transport","bpm","value"],"mappings":"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","sourcesContent":["import Tone from 'tone'\n\nexport default function tune3() {\n  let reverb = new Tone.Reverb({\n    decay: 1.5,\n    preDelay: 0.01\n  }).toMaster()\n\n  let panner = new Tone.AutoPanner({\n    frequency: 4,\n    depth: 1\n  }).toMaster()\n\n  let filter = new Tone.AutoFilter({\n    frequency: 2,\n    depth: 0.6\n  }).toMaster()\n\n  let tremolo = new Tone.Tremolo({\n    frequency: 3,\n    depth: 2\n  }).toMaster()\n\n  var feedbackDelay = new Tone.FeedbackDelay('4n', 0.8).toMaster()\n  let dist = new Tone.Distortion({\n    distortion: 1,\n    oversample: '4x'\n  }).toMaster()\n\n  let cheby = new Tone.Chebyshev(50)\n\n  let crusher = new Tone.BitCrusher(8).toMaster()\n\n  let phaser = new Tone.Phaser({\n    frequency: 15,\n    octaves: 5,\n    baseFrequency: 1000\n  }).toMaster()\n\n  let synth = new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      // fatsawtooth\n      type: 'fatsawtooth',\n      count: 1\n      // spread: 30,\n      // phase: 10\n      // fadeIn: 4\n    }\n    // envelope: {\n    //   attack: 1,\n    //   decay: 1,\n    //   sustain: 1,\n    //   release: 5,\n    //   attackCurve: 'exponential'\n    // }\n  }).toMaster()\n\n  // synth.connect(panner)\n  // synth.connect(filter)\n  // synth.connect(cheby)\n  // // synth.connect(crusher)\n  // synth.connect(dist)\n  // synth.connect(feedbackDelay)\n  // synth.connect(tremolo)\n  // synth.connect(phaser)\n  // synth.connect(reverb)\n\n  let synth2 = new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      // fatsawtooth\n      type: 'sine'\n      // count: 1,\n      // spread: 30\n      // phase: 10\n      // fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 1,\n      sustain: 1,\n      release: 5,\n      attackCurve: 'exponential'\n    }\n  }).toMaster()\n\n  synth2.connect(panner)\n  synth2.connect(filter)\n  // synth2.connect(cheby)\n  // synth.connect(crusher)\n  synth2.connect(dist)\n  synth2.connect(feedbackDelay)\n  // synth2.connect(tremolo)\n  // synth2.connect(phaser)\n  synth2.connect(reverb)\n\n  let synth3 = new Tone.PolySynth(1, Tone.Synth, {\n    oscillator: {\n      // fatsawtooth\n      type: 'square'\n      // count: 1,\n      // spread: 30\n      // phase: 10\n      // fadeIn: 4\n    },\n    envelope: {\n      attack: 0.3,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1,\n      attackCurve: 'exponential'\n    }\n  }).toMaster()\n\n  synth3.connect(panner)\n  synth3.connect(filter)\n  // synth2.connect(cheby)\n  // synth.connect(crusher)\n  synth3.connect(dist)\n  synth3.connect(feedbackDelay)\n  // synth2.connect(tremolo)\n  // synth2.connect(phaser)\n  synth3.connect(reverb)\n\n  let part = new Tone.Part(\n    function(time, note) {\n      synth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    },\n    [\n      {\n        time: '0:0:0',\n        noteName: 'C3',\n        velocity: 1,\n        duration: '4n'\n      },\n      {\n        time: '1:0:0',\n        noteName: 'E3',\n        velocity: 1,\n        duration: '4n'\n      },\n      {\n        time: '2:0:0',\n        noteName: 'A2',\n        velocity: 1,\n        duration: '4n'\n      },\n      {\n        time: '3:0:0',\n        noteName: 'G2',\n        velocity: 1,\n        duration: '4n'\n      },\n      {\n        time: '4:0:0',\n        noteName: 'E2',\n        velocity: 1,\n        duration: '4n'\n      },\n      {\n        time: '5:0:0',\n        noteName: 'F2',\n        velocity: 1,\n        duration: '4n'\n      },\n      {\n        time: '6:0:0',\n        noteName: 'A2',\n        velocity: 1,\n        duration: '4n'\n      },\n      {\n        time: '7:0:0',\n        noteName: 'D3',\n        velocity: 1,\n        duration: '4n'\n      }\n    ]\n  ) //.start(0)\n\n  // part.loop = true\n  // part.loopEnd = '8m'\n\n  let part2 = new Tone.Part(\n    function(time, note) {\n      synth2.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    },\n    [\n      {\n        time: '0:0:0',\n        noteName: 'C3',\n        velocity: 1,\n        duration: '32n'\n      },\n      {\n        time: '0:1:0',\n        noteName: 'E3',\n        velocity: 1,\n        duration: '32n'\n      },\n      {\n        time: '0:2:0',\n        noteName: 'A2',\n        velocity: 1,\n        duration: '32n'\n      },\n      {\n        time: '0:3:0',\n        noteName: 'G2',\n        velocity: 1,\n        duration: '32n'\n      },\n      {\n        time: '1:0:0',\n        noteName: 'E2',\n        velocity: 1,\n        duration: '32n'\n      },\n      {\n        time: '1:1:0',\n        noteName: 'F2',\n        velocity: 1,\n        duration: '32n'\n      },\n      {\n        time: '1:2:0',\n        noteName: 'A2',\n        velocity: 1,\n        duration: '32n'\n      },\n      {\n        time: '1:3:0',\n        noteName: 'D3',\n        velocity: 1,\n        duration: '32n'\n      }\n    ]\n  ) //.start(0)\n\n  // part2.loop = true\n  // part2.loopEnd = '2m'\n\n  let part3 = new Tone.Part(\n    function(time, note) {\n      synth3.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    },\n    [\n      {\n        time: '0:0:0',\n        noteName: 'C5',\n        velocity: 0.3,\n        duration: '32n'\n      },\n      {\n        time: '0:1:3',\n        noteName: 'E5',\n        velocity: 0.3,\n        duration: '32n'\n      },\n      {\n        time: '1:2:2',\n        noteName: 'A5',\n        velocity: 0.3,\n        duration: '32n'\n      }\n      // {\n      //   time: '0:3:0',\n      //   noteName: 'G5',\n      //   velocity: 1,\n      //   duration: '32n'\n      // },\n      // {\n      //   time: '1:0:0',\n      //   noteName: 'E4',\n      //   velocity: 1,\n      //   duration: '32n'\n      // },\n      // {\n      //   time: '1:1:0',\n      //   noteName: 'F4',\n      //   velocity: 1,\n      //   duration: '32n'\n      // },\n      // {\n      //   time: '1:2:0',\n      //   noteName: 'A5',\n      //   velocity: 1,\n      //   duration: '32n'\n      // },\n      // {\n      //   time: '1:3:0',\n      //   noteName: 'D5',\n      //   velocity: 1,\n      //   duration: '32n'\n      // }\n    ]\n  ).start(0)\n\n  part3.loop = true\n  part3.loopEnd = '2m'\n\n  // Tone.Transport.bpm.value = 132\n  Tone.Transport.bpm.value = 60\n  Tone.Transport.start()\n}\n"]},"metadata":{},"sourceType":"module"}