{"ast":null,"code":"var _jsxFileName = \"/Users/martsofi/hseadc2017_thereminvox/app/javascript/containers/Synth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport Tone from 'tone';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    _this.startSynth = _this.startSynth.bind(_assertThisInitialized(_this));\n    _this.toggleFilter = _this.toggleFilter.bind(_assertThisInitialized(_this));\n    _this.toggleFeedbackDelay = _this.toggleFeedbackDelay.bind(_assertThisInitialized(_this));\n    _this.toggleTremolo = _this.toggleTremolo.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"startSynth\",\n    value: function startSynth() {\n      var synth = new Tone.Synth().toMaster();\n      this.setState({\n        synth: synth\n      });\n      var loop = new Tone.Loop(function (time) {\n        synth.triggerAttackRelease('C2', '8n', time);\n      }, '4n');\n      loop.start('0m').stop('16m');\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleFilter\",\n    value: function toggleFilter() {\n      var autoFilter = new Tone.AutoFilter({\n        frequency: 1,\n        type: 'sine',\n        depth: 1,\n        baseFrequency: 500,\n        octaves: 2.6,\n        filter: {\n          type: 'lowpass',\n          rolloff: -12,\n          Q: 1\n        }\n      }).toMaster();\n      this.setState({\n        autoFilter: autoFilter\n      });\n      var synth = this.state.synth;\n      synth.connect(autoFilter);\n    }\n  }, {\n    key: \"toggleFeedbackDelay\",\n    value: function toggleFeedbackDelay() {\n      var feedbackDelay1 = new Tone.FeedbackDelay({\n        delayTime: '32n',\n        maxDelay: 10\n      }).toMaster();\n      var feedbackDelay2 = new Tone.FeedbackDelay({\n        delayTime: '8n',\n        maxDelay: 10\n      }).toMaster(); // this.setState({\n      //   feedbackDelay: feedbackDelay\n      // })\n      // let { synth } = this.state\n\n      this.state.synth.connect(feedbackDelay1);\n      this.state.synth.connect(feedbackDelay2);\n    }\n  }, {\n    key: \"toggleTremolo\",\n    value: function toggleTremolo() {\n      var tremolo = new Tone.Tremolo({\n        frequency: 10,\n        type: 'sine',\n        depth: 0.5,\n        spread: 180\n      }).toMaster();\n      this.state.synth.connect(tremolo);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.startSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"div\", {\n        onClick: this.toggleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Toggle Filter\"), React.createElement(\"div\", {\n        onClick: this.toggleFeedbackDelay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Feedback Delay\"), React.createElement(\"div\", {\n        onClick: this.toggleTremolo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Toggle Tremolo\"));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/martsofi/hseadc2017_thereminvox/app/javascript/containers/Synth.jsx"],"names":["React","Tone","Synth","props","startSynth","bind","toggleFilter","toggleFeedbackDelay","toggleTremolo","synth","toMaster","setState","loop","Loop","time","triggerAttackRelease","start","stop","Transport","bpm","value","autoFilter","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","state","connect","feedbackDelay1","FeedbackDelay","delayTime","maxDelay","feedbackDelay2","tremolo","Tremolo","spread","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Tone from 'tone'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.startSynth = this.startSynth.bind(this)\n    this.toggleFilter = this.toggleFilter.bind(this)\n    this.toggleFeedbackDelay = this.toggleFeedbackDelay.bind(this)\n    this.toggleTremolo = this.toggleTremolo.bind(this)\n  }\n\n  startSynth() {\n    let synth = new Tone.Synth().toMaster()\n\n    this.setState({\n      synth: synth\n    })\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('C2', '8n', time)\n    }, '4n')\n\n    loop.start('0m').stop('16m')\n\n    Tone.Transport.bpm.value = 115\n    Tone.Transport.start()\n  }\n\n  toggleFilter() {\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 500,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    }).toMaster()\n\n    this.setState({\n      autoFilter: autoFilter\n    })\n\n    let { synth } = this.state\n    synth.connect(autoFilter)\n  }\n\n  toggleFeedbackDelay() {\n    let feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: '32n',\n      maxDelay: 10\n    }).toMaster()\n\n    let feedbackDelay2 = new Tone.FeedbackDelay({\n      delayTime: '8n',\n      maxDelay: 10\n    }).toMaster()\n\n    // this.setState({\n    //   feedbackDelay: feedbackDelay\n    // })\n\n    // let { synth } = this.state\n    this.state.synth.connect(feedbackDelay1)\n    this.state.synth.connect(feedbackDelay2)\n  }\n\n  toggleTremolo() {\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0.5,\n      spread: 180\n    }).toMaster()\n\n    this.state.synth.connect(tremolo)\n  }\n\n  render() {\n    return (\n      <div>\n        <div onClick={this.startSynth}>Start</div>\n        <div onClick={this.toggleFilter}>Toggle Filter</div>\n        <div onClick={this.toggleFeedbackDelay}>Feedback Delay</div>\n        <div onClick={this.toggleTremolo}>Toggle Tremolo</div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}