{"ast":null,"code":"var _jsxFileName = \"/Users/martsofi/DZmusic/app/javascript/components/Slider.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\n\nvar Slider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Slider, _React$Component);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Slider).call(this, props));\n    _this.state = {\n      mouseDown: false,\n      thumbLeft: 0\n    };\n    _this.slideArea = React.createRef();\n\n    _.bindAll(_assertThisInitialized(_this), 'handleMouseMove', 'handleMouseDown', 'handleMouseUp', 'moveThumb', 'calculateLeft', 'calculateValue');\n\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var value = this.props.value;\n\n      var _this$slideArea$curre = this.slideArea.current.getBoundingClientRect(),\n          x = _this$slideArea$curre.x,\n          width = _this$slideArea$curre.width;\n\n      this.setState({\n        thumbLeft: this.calculateLeft(width, value)\n      });\n      document.addEventListener('mouseup', this.handleMouseUp);\n      document.addEventListener('mousemove', this.handleMouseMove);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      // const { width } = this.state.area\n      var _this$slideArea$curre2 = this.slideArea.current.getBoundingClientRect(),\n          x = _this$slideArea$curre2.x,\n          width = _this$slideArea$curre2.width;\n\n      if (nextProps.value != this.props.value) {\n        console.log('true');\n        nextState.thumbLeft = this.calculateLeft(width, nextProps.value);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"handleDragOver\",\n    value: function handleDragOver(e) {\n      e.preventDefault();\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(e) {\n      e.preventDefault();\n      this.setState({\n        mouseDown: true\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {\n      var _this$props = this.props,\n          name = _this$props.name,\n          handleMouseUp = _this$props.handleMouseUp;\n\n      if (this.state.mouseDown) {\n        // handleMouseUp(name)\n        this.setState({\n          mouseDown: false\n        });\n      }\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(e) {\n      var mouseDown = this.state.mouseDown;\n\n      if (mouseDown) {\n        this.moveThumb(e.screenX);\n      }\n    }\n  }, {\n    key: \"moveThumb\",\n    value: function moveThumb(screenX) {\n      var _this$slideArea$curre3 = this.slideArea.current.getBoundingClientRect(),\n          x = _this$slideArea$curre3.x,\n          width = _this$slideArea$curre3.width;\n\n      var _this$props2 = this.props,\n          name = _this$props2.name,\n          min = _this$props2.min,\n          max = _this$props2.max,\n          handleValueChange = _this$props2.handleValueChange; // const areaLeft = this.state.area.left\n\n      var areaRight = this.calculateRight(x, width);\n      var thumbLeft = screenX - x;\n\n      if (thumbLeft >= 0 && screenX <= areaRight) {\n        var value = this.calculateValue(width, thumbLeft);\n        handleValueChange(name, value);\n        this.setState({\n          thumbLeft: thumbLeft\n        });\n      }\n    }\n  }, {\n    key: \"calculateRight\",\n    value: function calculateRight(x, width) {\n      return x = width;\n    }\n  }, {\n    key: \"calculateLeft\",\n    value: function calculateLeft(width, value) {\n      var _this$props3 = this.props,\n          min = _this$props3.min,\n          max = _this$props3.max;\n      var range = max - min;\n      var coef = range / width;\n      var left = value / coef;\n      return left;\n    }\n  }, {\n    key: \"calculateValue\",\n    value: function calculateValue(width, thumbLeft) {\n      var _this$props4 = this.props,\n          min = _this$props4.min,\n          max = _this$props4.max;\n      var range = max - min;\n      var coef = range / width;\n      var value = thumbLeft * coef;\n      return value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var thumbLeft = this.state.thumbLeft;\n      var style = {\n        transform: \"translateX(\".concat(thumbLeft, \"px)\")\n      };\n      return React.createElement(\"div\", {\n        className: \"SliderContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Slider\",\n        ref: this.slideArea,\n        onDragOver: this.handleDragOver,\n        onDrop: this.handleDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"thumb\",\n        style: style,\n        onMouseDown: this.handleMouseDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Slider;\n}(React.Component);\n\nexport { Slider as default };","map":{"version":3,"sources":["/Users/martsofi/DZmusic/app/javascript/components/Slider.jsx"],"names":["_","React","Slider","props","state","mouseDown","thumbLeft","slideArea","createRef","bindAll","value","current","getBoundingClientRect","x","width","setState","calculateLeft","document","addEventListener","handleMouseUp","handleMouseMove","nextProps","nextState","console","log","e","preventDefault","name","moveThumb","screenX","min","max","handleValueChange","areaRight","calculateRight","calculateValue","range","coef","left","style","transform","handleDragOver","handleDrop","handleMouseDown","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\n\nexport default class Slider extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      mouseDown: false,\n\n      thumbLeft: 0\n    }\n\n    this.slideArea = React.createRef()\n\n    _.bindAll(\n      this,\n      'handleMouseMove',\n      'handleMouseDown',\n      'handleMouseUp',\n      'moveThumb',\n      'calculateLeft',\n      'calculateValue'\n    )\n  }\n\n  componentDidMount() {\n    const { value } = this.props\n    const { x, width } = this.slideArea.current.getBoundingClientRect()\n\n    this.setState({\n      thumbLeft: this.calculateLeft(width, value)\n    })\n\n    document.addEventListener('mouseup', this.handleMouseUp)\n    document.addEventListener('mousemove', this.handleMouseMove)\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // const { width } = this.state.area\n    const { x, width } = this.slideArea.current.getBoundingClientRect()\n\n    if (nextProps.value != this.props.value) {\n      console.log('true')\n      nextState.thumbLeft = this.calculateLeft(width, nextProps.value)\n    }\n\n    return true\n  }\n\n  handleDragOver(e) {\n    e.preventDefault()\n  }\n\n  handleMouseDown(e) {\n    e.preventDefault()\n\n    this.setState({\n      mouseDown: true\n    })\n  }\n\n  handleMouseUp() {\n    const { name, handleMouseUp } = this.props\n\n    if (this.state.mouseDown) {\n      // handleMouseUp(name)\n\n      this.setState({\n        mouseDown: false\n      })\n    }\n  }\n\n  handleMouseMove(e) {\n    const { mouseDown } = this.state\n\n    if (mouseDown) {\n      this.moveThumb(e.screenX)\n    }\n  }\n\n  moveThumb(screenX) {\n    const { x, width } = this.slideArea.current.getBoundingClientRect()\n    const { name, min, max, handleValueChange } = this.props\n    // const areaLeft = this.state.area.left\n    const areaRight = this.calculateRight(x, width)\n\n    const thumbLeft = screenX - x\n\n    if (thumbLeft >= 0 && screenX <= areaRight) {\n      const value = this.calculateValue(width, thumbLeft)\n      handleValueChange(name, value)\n\n      this.setState({\n        thumbLeft\n      })\n    }\n  }\n\n  calculateRight(x, width) {\n    return (x = width)\n  }\n\n  calculateLeft(width, value) {\n    const { min, max } = this.props\n    const range = max - min\n    const coef = range / width\n    const left = value / coef\n\n    return left\n  }\n\n  calculateValue(width, thumbLeft) {\n    const { min, max } = this.props\n\n    const range = max - min\n    const coef = range / width\n    const value = thumbLeft * coef\n\n    return value\n  }\n\n  render() {\n    const { thumbLeft } = this.state\n\n    const style = {\n      transform: `translateX(${thumbLeft}px)`\n    }\n\n    return (\n      <div className=\"SliderContainer\">\n        <div\n          className=\"Slider\"\n          ref={this.slideArea}\n          onDragOver={this.handleDragOver}\n          onDrop={this.handleDrop}\n        >\n          <div className=\"line\"></div>\n          <div\n            className=\"thumb\"\n            style={style}\n            onMouseDown={this.handleMouseDown}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}