{"ast":null,"code":"var _jsxFileName = \"/Users/martsofi/DZmusic/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport * as parts from '../tunes/parts';\nimport * as synths from '../tunes/synths';\nimport PlaySwitch from '../components/PlaySwitch';\nimport Distortion from '../components/effects/Distortion';\nimport FeedbackDelay from '../components/effects/FeedbackDelay';\nimport BitCrusher from '../components/effects/BitCrusher';\nimport Reverb from '../components/effects/Reverb';\nimport Tremolo from '../components/effects/Tremolo';\nimport Freeverb from '../components/effects/Freeverb';\nimport JcReverb from '../components/effects/JcReverb';\nimport PolySynth from '../components/synths/PolySynth';\nimport ToneSynth from '../components/synths/ToneSynth';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var ambientSynth = synths.toneSynth();\n    var leadSynth = synths.polySynth();\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 15,\n      type: 'sine',\n      depth: 1\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 0\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var distortion = new Tone.Distortion({\n      // distortion: 0.4,\n      // oversample: 'none'\n      distortion: 0,\n      oversample: '4x'\n    }); // let effect = new Tone.Effect({\n    //   wet: 1\n    // }).toMaster()\n\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 0,\n      preDelay: 0\n    }); // StereoEffect ???\n    // StereoFeedbackEffect ???\n\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    }); // StereoXFeedbackEffect ???\n\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0,\n      spread: 360\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    });\n    autoFilter.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    distortion.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    tremolo.wet.value = 0;\n    vibrato.wet.value = 0;\n    var synth = new Tone.PolySynth();\n    var synth1 = new Tone.Synth();\n    var synth2 = new Tone.Synth();\n    var synth3 = new Tone.Synth();\n    var synth4 = new Tone.Synth();\n    synth.chain(autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master);\n    synth2.chain(autoFilter, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, distortion, feedbackDelay, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, tremolo, vibrato, Tone.Master); // let pattern = new Tone.Pattern(function(time, note) {\n    //   synth.triggerAttackRelease('C2', 'D4', 'E5', 'A6')\n    // }, '4n')\n\n    var pattern = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease(['C6', 'C3', 'F4', 'A2', 'C1', 'F1'], '4n', time);\n    }, '4n');\n    var loop1 = new Tone.Loop(function (time) {\n      synth2.triggerAttackRelease('C1', '1n', time);\n    }, '4n');\n    var loop2 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('E2', '16n', time);\n    }, '4n');\n    var loop3 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('D2', '1n', time);\n    }, '4n');\n    var loop4 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease('A1', '16n', time);\n    }, '4n');\n    _this.state = {\n      ambientSynth: ambientSynth,\n      lastChange: Date.now(),\n      timeout: 0,\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        convolver: convolver\n      },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        pingPongDelay: pingPongDelay\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      synth2: {\n        instrument: synth2,\n        on: false\n      },\n      pattern: {\n        pattern: pattern,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      // pattern: {\n      //   pattern: pattern,\n      //   on: false\n      // }\n      part1: {\n        part: parts.part1(leadSynth),\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'generateRandom', 'getRandomArbitrary', 'toggleLoop', 'changeEffectWetValue', 'changeDistortionValue', 'togglEffect', 'changeFeedbackDelayValue', 'changeBitCrusherValue', 'changeReverbValue', 'changeTremoloFrequencyValue', 'changeTremoloDepthValue', 'changeFreeverbRoomSizeValue', 'changeJcReverbValue', 'changeReverbPreDelayValue', 'changeSynthValue', 'togglePart');\n\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"changeSynthValue\",\n    value: function changeSynthValue(synthName, effectName, value) {\n      var synth = this.state[synthName];\n      var envelope = synth.instrument.envelope;\n      envelope[effectName] = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        oscillator: synth.instrument.oscillator,\n        envelope: envelope\n      }));\n    }\n  }, {\n    key: \"togglePart\",\n    value: function togglePart(partName) {\n      var _this$state$partName = this.state[partName],\n          part = _this$state$partName.part,\n          on = _this$state$partName.on;\n\n      if (on == true) {\n        part.stop();\n      } else {\n        console.log('yo');\n        part.at('1m');\n        part.start(0);\n        part.loop = true;\n        part.loopEnd = '8m';\n      }\n\n      this.setState(_defineProperty({}, \"\".concat(partName), {\n        part: part,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateRandom();\n    }\n  }, {\n    key: \"getRandomArbitrary\",\n    value: function getRandomArbitrary(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n  }, {\n    key: \"generateRandom\",\n    value: function generateRandom() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          lastChange = _this$state.lastChange,\n          timeout = _this$state.timeout;\n\n      if (Date.now() - lastChange >= timeout) {\n        var random = this.getRandomArbitrary(100, 3000);\n        this.setState({\n          lastChange: Date.now(),\n          timeout: random\n        });\n        this.changeDistortionValue('distortion', random / 30);\n      }\n\n      setTimeout(function () {\n        return _this2.generateRandom();\n      }, timeout);\n    }\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"togglePattern\",\n    value: function togglePattern(patternName) {\n      var _this$state$patternNa = this.state[patternName],\n          pattern = _this$state$patternNa.pattern,\n          on = _this$state$patternNa.on;\n      on == true ? pattern.stop() : pattern.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(patternName), {\n        pattern: pattern,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"togglEffect\",\n    value: function togglEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayValue\",\n    value: function changeFeedbackDelayValue(effectName, value) {\n      var _this$state$feedbackD = this.state.feedbackDelay,\n          effect = _this$state$feedbackD.effect,\n          wet = _this$state$feedbackD.wet,\n          on = _this$state$feedbackD.on;\n      effect.maxDelay = value;\n      this.setState({\n        feedbackDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeBitCrusherValue\",\n    value: function changeBitCrusherValue(effectName, value) {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          wet = _this$state$bitCrushe.wet,\n          on = _this$state$bitCrushe.on;\n      effect.bits = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeJcReverbValue\",\n    value: function changeJcReverbValue(effectName, value) {\n      var _this$state$jcReverb = this.state.jcReverb,\n          effect = _this$state$jcReverb.effect,\n          wet = _this$state$jcReverb.wet,\n          on = _this$state$jcReverb.on;\n      effect.roomSize = value;\n      this.setState({\n        jcReverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeReverbValue\",\n    value: function changeReverbValue(effectName, value) {\n      var _this$state$reverb = this.state.reverb,\n          effect = _this$state$reverb.effect,\n          wet = _this$state$reverb.wet,\n          on = _this$state$reverb.on;\n      effect.decay = value;\n      this.setState({\n        reverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeReverbPreDelayValue\",\n    value: function changeReverbPreDelayValue(effectName, value) {\n      var _this$state$reverb2 = this.state.reverb,\n          effect = _this$state$reverb2.effect,\n          wet = _this$state$reverb2.wet,\n          on = _this$state$reverb2.on;\n      effect.preDelay = value;\n      this.setState({\n        reverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFreeverbRoomSizeValue\",\n    value: function changeFreeverbRoomSizeValue(effectName, value) {\n      var _this$state$freeverb = this.state.freeverb,\n          effect = _this$state$freeverb.effect,\n          wet = _this$state$freeverb.wet,\n          on = _this$state$freeverb.on;\n      effect.roomSize.value = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeTremoloFrequencyValue\",\n    value: function changeTremoloFrequencyValue(effectName, value) {\n      var _this$state$tremolo = this.state.tremolo,\n          effect = _this$state$tremolo.effect,\n          wet = _this$state$tremolo.wet,\n          on = _this$state$tremolo.on;\n      effect.frequency.value = value;\n      this.setState({\n        tremolo: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeTremoloDepthValue\",\n    value: function changeTremoloDepthValue(effectName, value) {\n      var _this$state$tremolo2 = this.state.tremolo,\n          effect = _this$state$tremolo2.effect,\n          wet = _this$state$tremolo2.wet,\n          on = _this$state$tremolo2.on;\n      effect.depth.value = value;\n      this.setState({\n        tremolo: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          synth = _this$state2.synth,\n          synth2 = _this$state2.synth2,\n          loop1 = _this$state2.loop1,\n          loop2 = _this$state2.loop2,\n          loop3 = _this$state2.loop3,\n          loop4 = _this$state2.loop4,\n          pattern = _this$state2.pattern,\n          part1 = _this$state2.part1,\n          ambientSynth = _this$state2.ambientSynth;\n      var _togglEffect = this.togglEffect,\n          changeSynthValue = this.changeSynthValue,\n          togglePart = this.togglePart;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"check1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"check1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"check1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"EffectContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PlayTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703\n        },\n        __self: this\n      }, \"Pattern\"), React.createElement(\"div\", {\n        className: \"PlayElement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: pattern.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.togglePattern('pattern');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"EffectContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PlayTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        },\n        __self: this\n      }, \"Loop 1\"), React.createElement(\"div\", {\n        className: \"PlayElement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"PlayTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726\n        },\n        __self: this\n      }, \"Loop 2\"), React.createElement(\"div\", {\n        className: \"PlayElement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"PlayTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }, \"Loop 3\"), React.createElement(\"div\", {\n        className: \"PlayElement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"PlayTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746\n        },\n        __self: this\n      }, \"Loop 4\"), React.createElement(\"div\", {\n        className: \"PlayElement\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"EffectContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, this.state.distortion, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('distortion');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        },\n        __self: this\n      })), React.createElement(Reverb, Object.assign({}, this.state.reverb, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('reverb');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeReverbValue: this.changeReverbValue,\n        changeReverbPreDelayValue: this.changeReverbPreDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763\n        },\n        __self: this\n      })), React.createElement(FeedbackDelay, Object.assign({}, this.state.feedbackDelay, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('feedbackDelay');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFeedbackDelayValue: this.changeFeedbackDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, this.state.bitCrusher, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('bitCrusher');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeBitCrusherValue: this.changeBitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776\n        },\n        __self: this\n      })), React.createElement(Tremolo, Object.assign({}, this.state.tremolo, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('tremolo');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeTremoloFrequencyValue: this.changeTremoloFrequencyValue,\n        changeTremoloDepthValue: this.changeTremoloDepthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783\n        },\n        __self: this\n      })), React.createElement(Freeverb, Object.assign({}, this.state.freeverb, {\n        togglEffect: function togglEffect() {\n          return _togglEffect('freeverb');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFreeverbRoomSizeValue: this.changeFreeverbRoomSizeValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790\n        },\n        __self: this\n      })), React.createElement(PolySynth, {\n        synth: \"leadSynth\",\n        instrument: ambientSynth,\n        on: part1.on,\n        togglePlay: function togglePlay() {\n          return togglePart('part1');\n        },\n        changeSynthValue: changeSynthValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/martsofi/DZmusic/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","parts","synths","PlaySwitch","Distortion","FeedbackDelay","BitCrusher","Reverb","Tremolo","Freeverb","JcReverb","PolySynth","ToneSynth","Synth","props","ambientSynth","toneSynth","leadSynth","polySynth","autoFilter","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","bits","chebyshev","Chebyshev","order","oversample","chorus","Chorus","delayTime","spread","convolver","Convolver","onload","noOp","normalize","distortion","feedbackDelay","maxDelay","feedbackEffect","FeedbackEffect","feedback","freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","decay","preDelay","stereoWidener","StereoWidener","width","tremolo","vibrato","Vibrato","wet","value","synth","synth1","synth2","synth3","synth4","chain","Master","pattern","Pattern","time","note","triggerAttackRelease","loop1","Loop","loop2","loop3","loop4","state","lastChange","Date","now","timeout","effect","on","instrument","loop","part1","part","bindAll","synthName","effectName","envelope","setState","oscillator","partName","stop","console","log","at","start","loopEnd","generateRandom","min","max","Math","floor","random","getRandomArbitrary","changeDistortionValue","setTimeout","loopName","Transport","bpm","patternName","togglEffect","changeSynthValue","togglePart","togglePattern","toggleLoop","changeEffectWetValue","changeReverbValue","changeReverbPreDelayValue","changeFeedbackDelayValue","changeBitCrusherValue","changeTremoloFrequencyValue","changeTremoloDepthValue","changeFreeverbRoomSizeValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport * as parts from '../tunes/parts'\nimport * as synths from '../tunes/synths'\n\nimport PlaySwitch from '../components/PlaySwitch'\nimport Distortion from '../components/effects/Distortion'\nimport FeedbackDelay from '../components/effects/FeedbackDelay'\nimport BitCrusher from '../components/effects/BitCrusher'\nimport Reverb from '../components/effects/Reverb'\nimport Tremolo from '../components/effects/Tremolo'\nimport Freeverb from '../components/effects/Freeverb'\nimport JcReverb from '../components/effects/JcReverb'\n\nimport PolySynth from '../components/synths/PolySynth'\nimport ToneSynth from '../components/synths/ToneSynth'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let ambientSynth = synths.toneSynth()\n\n    let leadSynth = synths.polySynth()\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 15,\n      type: 'sine',\n      depth: 1\n    })\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    })\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 0\n    })\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 50,\n      oversample: 'none'\n    })\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    })\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    })\n\n    let distortion = new Tone.Distortion({\n      // distortion: 0.4,\n      // oversample: 'none'\n      distortion: 0,\n      oversample: '4x'\n    })\n\n    // let effect = new Tone.Effect({\n    //   wet: 1\n    // }).toMaster()\n\n    let feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    })\n\n    let feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    })\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    })\n\n    let jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    })\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    })\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    })\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    })\n\n    let reverb = new Tone.Reverb({\n      decay: 0,\n      preDelay: 0\n    })\n\n    // StereoEffect ???\n    // StereoFeedbackEffect ???\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    })\n\n    // StereoXFeedbackEffect ???\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0,\n      spread: 360\n    })\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    })\n\n    autoFilter.wet.value = 0\n    autoPanner.wet.value = 0\n    autoWah.wet.value = 0\n    bitCrusher.wet.value = 0\n    chebyshev.wet.value = 0\n    chorus.wet.value = 0\n    convolver.wet.value = 0\n    distortion.wet.value = 0\n    feedbackDelay.wet.value = 0\n    feedbackEffect.wet.value = 0\n    freeverb.wet.value = 0\n    jcReverb.wet.value = 0\n    phaser.wet.value = 0\n    pingPongDelay.wet.value = 0\n    pitchShift.wet.value = 0\n    reverb.wet.value = 0\n    stereoWidener.wet.value = 0\n    tremolo.wet.value = 0\n    vibrato.wet.value = 0\n\n    let synth = new Tone.PolySynth()\n    let synth1 = new Tone.Synth()\n    let synth2 = new Tone.Synth()\n    let synth3 = new Tone.Synth()\n    let synth4 = new Tone.Synth()\n\n    synth.chain(\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    synth2.chain(\n      autoFilter,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      distortion,\n      feedbackDelay,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      tremolo,\n      vibrato,\n      Tone.Master\n    )\n\n    // let pattern = new Tone.Pattern(function(time, note) {\n    //   synth.triggerAttackRelease('C2', 'D4', 'E5', 'A6')\n    // }, '4n')\n\n    let pattern = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease(\n        ['C6', 'C3', 'F4', 'A2', 'C1', 'F1'],\n        '4n',\n        time\n      )\n    }, '4n')\n\n    let loop1 = new Tone.Loop(function(time) {\n      synth2.triggerAttackRelease('C1', '1n', time)\n    }, '4n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('E2', '16n', time)\n    }, '4n')\n\n    let loop3 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('D2', '1n', time)\n    }, '4n')\n\n    let loop4 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease('A1', '16n', time)\n    }, '4n')\n\n    this.state = {\n      ambientSynth,\n      lastChange: Date.now(),\n      timeout: 0,\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: { convolver },\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      jcReverb: {\n        effect: jcReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: { pingPongDelay },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      synth2: {\n        instrument: synth2,\n        on: false\n      },\n      pattern: {\n        pattern: pattern,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      // pattern: {\n      //   pattern: pattern,\n      //   on: false\n      // }\n      part1: {\n        part: parts.part1(leadSynth),\n        on: false\n      }\n    }\n\n    _.bindAll(\n      this,\n      'generateRandom',\n      'getRandomArbitrary',\n      'toggleLoop',\n      'changeEffectWetValue',\n      'changeDistortionValue',\n      'togglEffect',\n      'changeFeedbackDelayValue',\n      'changeBitCrusherValue',\n      'changeReverbValue',\n      'changeTremoloFrequencyValue',\n      'changeTremoloDepthValue',\n      'changeFreeverbRoomSizeValue',\n      'changeJcReverbValue',\n      'changeReverbPreDelayValue',\n      'changeSynthValue',\n      'togglePart'\n    )\n  }\n\n  changeSynthValue(synthName, effectName, value) {\n    let synth = this.state[synthName]\n    let envelope = synth.instrument.envelope\n    envelope[effectName] = value\n\n    this.setState({\n      [`${effectName}`]: {\n        oscillator: synth.instrument.oscillator,\n        envelope: envelope\n      }\n    })\n  }\n\n  togglePart(partName) {\n    let { part, on } = this.state[partName]\n\n    if (on == true) {\n      part.stop()\n    } else {\n      console.log('yo')\n      part.at('1m')\n      part.start(0)\n      part.loop = true\n      part.loopEnd = '8m'\n    }\n\n    this.setState({\n      [`${partName}`]: {\n        part: part,\n        on: !on\n      }\n    })\n  }\n\n  componentDidMount() {\n    this.generateRandom()\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  generateRandom() {\n    const { lastChange, timeout } = this.state\n\n    if (Date.now() - lastChange >= timeout) {\n      const random = this.getRandomArbitrary(100, 3000)\n      this.setState({\n        lastChange: Date.now(),\n        timeout: random\n      })\n\n      this.changeDistortionValue('distortion', random / 30)\n    }\n\n    setTimeout(() => this.generateRandom(), timeout)\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n\n    Tone.Transport.bpm.value = 115\n    Tone.Transport.start()\n  }\n\n  togglePattern(patternName) {\n    let { pattern, on } = this.state[patternName]\n\n    on == true ? pattern.stop() : pattern.start('0m')\n\n    this.setState({\n      [`${patternName}`]: {\n        pattern: pattern,\n        on: !on\n      }\n    })\n  }\n\n  togglEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? value : 0\n\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFeedbackDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackDelay\n\n    effect.maxDelay = value\n\n    this.setState({\n      feedbackDelay: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeBitCrusherValue(effectName, value) {\n    let { effect, wet, on } = this.state.bitCrusher\n\n    effect.bits = value\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeJcReverbValue(effectName, value) {\n    let { effect, wet, on } = this.state.jcReverb\n\n    effect.roomSize = value\n\n    this.setState({\n      jcReverb: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeReverbValue(effectName, value) {\n    let { effect, wet, on } = this.state.reverb\n\n    effect.decay = value\n\n    this.setState({\n      reverb: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeReverbPreDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.reverb\n\n    effect.preDelay = value\n\n    this.setState({\n      reverb: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFreeverbRoomSizeValue(effectName, value) {\n    let { effect, wet, on } = this.state.freeverb\n\n    effect.roomSize.value = value\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeTremoloFrequencyValue(effectName, value) {\n    let { effect, wet, on } = this.state.tremolo\n\n    effect.frequency.value = value\n\n    this.setState({\n      tremolo: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeTremoloDepthValue(effectName, value) {\n    let { effect, wet, on } = this.state.tremolo\n\n    effect.depth.value = value\n\n    this.setState({\n      tremolo: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let {\n      distortion,\n      synth,\n      synth2,\n      loop1,\n      loop2,\n      loop3,\n      loop4,\n      pattern,\n      part1,\n      ambientSynth\n    } = this.state\n    let { togglEffect, changeSynthValue, togglePart } = this\n\n    return (\n      <div>\n        <div className=\"check\">\n          <div className=\"check1\">\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n          </div>\n          <div className=\"check1\">\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n          </div>\n          <div className=\"check1\">\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n            <input type=\"checkbox\" />\n          </div>\n        </div>\n        <div className=\"EffectContainer\">\n          <div className=\"PlayTitle\">\n            <p>Pattern</p>\n            <div className=\"PlayElement\">\n              <PlaySwitch\n                name=\"play\"\n                value={pattern.on}\n                handleToggleClick={() => this.togglePattern('pattern')}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"EffectContainer\">\n          <div className=\"PlayTitle\">\n            <p>Loop 1</p>\n            <div className=\"PlayElement\">\n              <PlaySwitch\n                name=\"play\"\n                value={loop1.on}\n                handleToggleClick={() => this.toggleLoop('loop1')}\n              />\n            </div>\n          </div>\n\n          <div className=\"PlayTitle\">\n            <p>Loop 2</p>\n            <div className=\"PlayElement\">\n              <PlaySwitch\n                name=\"play\"\n                value={loop2.on}\n                handleToggleClick={() => this.toggleLoop('loop2')}\n              />\n            </div>\n          </div>\n          <div className=\"PlayTitle\">\n            <p>Loop 3</p>\n            <div className=\"PlayElement\">\n              <PlaySwitch\n                name=\"play\"\n                value={loop3.on}\n                handleToggleClick={() => this.toggleLoop('loop3')}\n              />\n            </div>\n          </div>\n          <div className=\"PlayTitle\">\n            <p>Loop 4</p>\n            <div className=\"PlayElement\">\n              <PlaySwitch\n                name=\"play\"\n                value={loop4.on}\n                handleToggleClick={() => this.toggleLoop('loop4')}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"EffectContainer\">\n          <Distortion\n            {...this.state.distortion}\n            togglEffect={() => togglEffect('distortion')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeDistortionValue={this.changeDistortionValue}\n          />\n          <Reverb\n            {...this.state.reverb}\n            togglEffect={() => togglEffect('reverb')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeReverbValue={this.changeReverbValue}\n            changeReverbPreDelayValue={this.changeReverbPreDelayValue}\n          />\n          <FeedbackDelay\n            {...this.state.feedbackDelay}\n            togglEffect={() => togglEffect('feedbackDelay')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeFeedbackDelayValue={this.changeFeedbackDelayValue}\n          />\n          <BitCrusher\n            {...this.state.bitCrusher}\n            togglEffect={() => togglEffect('bitCrusher')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeBitCrusherValue={this.changeBitCrusherValue}\n          />\n\n          <Tremolo\n            {...this.state.tremolo}\n            togglEffect={() => togglEffect('tremolo')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeTremoloFrequencyValue={this.changeTremoloFrequencyValue}\n            changeTremoloDepthValue={this.changeTremoloDepthValue}\n          />\n          <Freeverb\n            {...this.state.freeverb}\n            togglEffect={() => togglEffect('freeverb')}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeFreeverbRoomSizeValue={this.changeFreeverbRoomSizeValue}\n          />\n\n          <PolySynth\n            synth=\"leadSynth\"\n            instrument={ambientSynth}\n            on={part1.on}\n            togglePlay={() => togglePart('part1')}\n            changeSynthValue={changeSynthValue}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}