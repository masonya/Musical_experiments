{"ast":null,"code":"var _jsxFileName = \"/Users/martsofi/hseadc2017_thereminvox/app/javascript/components/effects/Distortion.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PlaySwitch from '../PlaySwitch';\nimport ToggleSwitch from '../ToggleSwitch';\nimport Slider from '../Slider';\nimport Knob from '../Knob';\n\nvar Distortion =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Distortion, _React$Component);\n\n  function Distortion(props) {\n    _classCallCheck(this, Distortion);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Distortion).call(this, props));\n  }\n\n  _createClass(Distortion, [{\n    key: \"render\",\n    value: function render() {\n      var name = 'distortion';\n      var _this$props = this.props,\n          effect = _this$props.effect,\n          on = _this$props.on,\n          changeEffectWetValue = _this$props.changeEffectWetValue,\n          changeDistortionValue = _this$props.changeDistortionValue,\n          togglEffect = _this$props.togglEffect;\n      return React.createElement(\"div\", {\n        className: \"Effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Distortion\"), \"Change distortion wet value\", React.createElement(Slider, {\n        name: name,\n        min: \"0\",\n        max: \"1\",\n        value: effect.wet.value,\n        handleValueChange: changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), \"Change distortion value\", React.createElement(Slider, {\n        name: name,\n        min: \"0\",\n        max: \"100\",\n        value: effect.distortion,\n        handleValueChange: changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), \"// \\u041D\\u0430\\u0439\\u0442\\u0438 \\u0434\\u043B\\u044F \\u0447\\u0435\\u0433\\u043E \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C \\u043A\\u043D\\u043E\\u0431 //\", ' ', React.createElement(Knob, {\n        min: \"\",\n        max: \"\",\n        handleValueChange: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), \"toggle Distortion\", React.createElement(ToggleSwitch, {\n        value: \"Distortion\",\n        current: on,\n        handleClick: togglEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Distortion;\n}(React.Component);\n\nexport { Distortion as default };","map":{"version":3,"sources":["/Users/martsofi/hseadc2017_thereminvox/app/javascript/components/effects/Distortion.jsx"],"names":["React","PlaySwitch","ToggleSwitch","Slider","Knob","Distortion","props","name","effect","on","changeEffectWetValue","changeDistortionValue","togglEffect","wet","value","distortion","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;IAEqBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,mFACXA,KADW;AAElB;;;;6BAEQ;AACP,UAAIC,IAAI,GAAG,YAAX;AADO,wBAQH,KAAKD,KARF;AAAA,UAGLE,MAHK,eAGLA,MAHK;AAAA,UAILC,EAJK,eAILA,EAJK;AAAA,UAKLC,oBALK,eAKLA,oBALK;AAAA,UAMLC,qBANK,eAMLA,qBANK;AAAA,UAOLC,WAPK,eAOLA,WAPK;AAUP,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,iCAGE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEL,IADR;AAEE,QAAA,GAAG,EAAC,GAFN;AAGE,QAAA,GAAG,EAAC,GAHN;AAIE,QAAA,KAAK,EAAEC,MAAM,CAACK,GAAP,CAAWC,KAJpB;AAKE,QAAA,iBAAiB,EAAEJ,oBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,6BAWE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEH,IADR;AAEE,QAAA,GAAG,EAAC,GAFN;AAGE,QAAA,GAAG,EAAC,KAHN;AAIE,QAAA,KAAK,EAAEC,MAAM,CAACO,UAJhB;AAKE,QAAA,iBAAiB,EAAEJ,qBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,wLAkByC,GAlBzC,EAmBE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAC,EAAV;AAAa,QAAA,GAAG,EAAC,EAAjB;AAAoB,QAAA,iBAAiB,EAAE,KAAKA,qBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,uBAqBE,oBAAC,YAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,OAAO,EAAEF,EAFX;AAGE,QAAA,WAAW,EAAEG,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,CADF;AA6BD;;;;EA5CqCZ,KAAK,CAACgB,S;;SAAzBX,U","sourcesContent":["import React from 'react'\n\nimport PlaySwitch from '../PlaySwitch'\nimport ToggleSwitch from '../ToggleSwitch'\nimport Slider from '../Slider'\nimport Knob from '../Knob'\n\nexport default class Distortion extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    let name = 'distortion'\n    const {\n      effect,\n      on,\n      changeEffectWetValue,\n      changeDistortionValue,\n      togglEffect\n    } = this.props\n\n    return (\n      <div className=\"Effect\">\n        <h1>Distortion</h1>\n        Change distortion wet value\n        <Slider\n          name={name}\n          min=\"0\"\n          max=\"1\"\n          value={effect.wet.value}\n          handleValueChange={changeEffectWetValue}\n        />\n        Change distortion value\n        <Slider\n          name={name}\n          min=\"0\"\n          max=\"100\"\n          value={effect.distortion}\n          handleValueChange={changeDistortionValue}\n        />\n        // Найти для чего использовать кноб //{' '}\n        <Knob min=\"\" max=\"\" handleValueChange={this.changeDistortionValue} />\n        toggle Distortion\n        <ToggleSwitch\n          value=\"Distortion\"\n          current={on}\n          handleClick={togglEffect}\n        />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}